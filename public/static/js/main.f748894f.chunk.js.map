{"version":3,"sources":["reducers/loginReducer.ts","reducers/pageReducer.ts","reducers/statusReducer.ts","reducers/todoReducer.ts","reducers/todosFetchedReducer.ts","reducers/showTodosReducer.ts","reducers/todoToUpdateReducer.ts","reducers/index.ts","api/api.ts","actions/page.ts","actions/user.ts","containers/NavBar.tsx","assets/icon.png","styles/styles.tsx","containers/Layout.tsx","containers/Login.tsx","actions/login.ts","containers/CreateAccount.tsx","containers/Status.tsx","actions/todo.ts","containers/ShowSteps.tsx","actions/step.ts","containers/ShowTodo.tsx","containers/ShowTodos.tsx","containers/AddTodo.tsx","containers/EditTodo.tsx","containers/EditUser.tsx","actions/status.ts","containers/UpdatePassword.tsx","styles/theme.tsx","containers/App.tsx","actions/ping.ts","index.tsx"],"names":["loginReducer","state","action","type","payload","pageReducer","statusReducer","todoReducer","todos","doneLast","sort","a","b","done","todosWithNewTodo","updatedTodo","newTodosWithUpdatedTodo","map","todo","id","removeTodoStateTodos","removeTodoPayload","filter","todoId","newStep","steps","updatedStep","step","removeStepPayload","removeStepStateTodos","newSteps","stepId","todosFetchedReducer","showTodosReducer","todoToUpdateReducer","combineReducers","page","login","appStatus","showTodos","todosFetched","todoToUpdate","api","path","method","body","fetch","window","location","host","headers","credentials","JSON","stringify","then","res","json","changePage","dispatch","logout","resp","status","mapDispatchToProps","connect","useState","showMenu","setShowMenu","ref","useRef","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","AppBar","position","Toolbar","sx","display","justifyContent","Typography","variant","flexGrow","IconButton","size","color","onClick","List","border","backgroundColor","right","top","ListItemButton","ListItemIcon","ListItemText","styles","root","minWidth","main","alignItems","flexDirection","icon","height","form","width","centered","todoIcon","fontSize","p","popup","left","transform","bgcolor","boxShadow","textFlash","opacity","animation","spinner","padding","paddingBottom","children","Container","Box","style","objectFit","src","Icon","alt","align","catch","err","email","setEmail","emailError","setEmailError","pword","setPword","pwordError","setPwordError","anyError","setAnyError","test","component","onSubmit","preventDefault","TextField","label","value","onChange","error","autoFocus","Stack","pt","spacing","Button","createAccount","name","setName","confPword","setConfPword","nameError","setNameError","confPwordError","setConfPwordError","statusOpen","setStatusOpen","showError","ShowStatus","marginTop","Modal","open","updateTodo","dueDate","addStep","updateStep","details","deleteStep","setStep","Grid","container","direction","item","xs","md","borderTop","overflow","marginLeft","text","replace","marginRight","deleteTodo","editTodo","todoToEdit","resetTodo","showSteps","setShowSteps","warning","setWarning","handleTodoDone","onClose","paddingLeft","paddingRight","textAlign","stepCount","length","ShowStepsCount","d","Date","todaysDate","getFullYear","getMonth","getDate","now","Math","floor","getTime","daysTilDue","abs","ShowDueDate","String","getTodos","getState","allOrActive","setAllOrActive","selectedTodos","sortedTodos","startIcon","addTodo","newBody","setTodo","setDueDate","todoError","setTodoError","dueDateError","setDueDateError","unformattedDate","date","marginBottom","reTodo","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","openTo","inputFormat","newValue","renderInput","params","updateUser","setStatus","loading","setLoading","returned","setReturned","getDetails","user","className","updatePassword","newPword","setNewPword","confirmNewPword","setConfirmNewPword","newPwordError","setNewPwordError","confirmNewPwordError","setConfirmNewPwordError","todoTheme","palette","success","typography","h1","h2","h4","h5","body1","button","theme","createTheme","ping","message","ShowPage","EditTodo","ThemeProvider","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.f748894f.chunk.js","sourcesContent":["interface Action {\n  payload: boolean;\n  type: \"LOGIN\";\n}\n\nconst loginReducer = (state = false, action : Action) => {\n  switch (action.type) {\n    case \"LOGIN\": \n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default loginReducer;","interface Action {\n  type: string;\n  payload: \"CHANGE_PAGE\";\n}\n\nconst pageReducer = (state = 'home', action : Action) => {\n  switch (action.type) {\n    case \"CHANGE_PAGE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default pageReducer;","interface Action {\n  payload: string | number | null;\n  type: string;\n};\n\nconst statusReducer = (state = null, action : Action) => {\n  switch (action.type) {\n    case \"STATUS\":\n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default statusReducer;","import {Itodo, Istep, IremoveTodo, IremoveStep} from '../interfaces';\n\ninterface Action {\n  type: \"SET_TODOS\" | \"ADD_TODO\" | \"UPDATE_TODO\" | \"REMOVE_TODO\" | \"ADD_STEP\" | \"UPDATE_STEP\" | \"REMOVE_STEP\";\n  payload: Itodo[] | Itodo | Istep | IremoveTodo | IremoveStep;\n};\n\nconst todoReducer = (state = [], action : Action) => {\n  switch (action.type){\n    case \"SET_TODOS\":\n      const todos = action.payload as Itodo[];\n      const doneLast : Itodo[] = todos.sort((a, b) => {\n        return (a.done === b.done) ? 0 : a.done ? 1 : -1\n      });\n      return doneLast;\n    case \"ADD_TODO\":\n      const todosWithNewTodo : Itodo[] = [...state, action.payload as Itodo];\n      return todosWithNewTodo.sort((a, b) => {\n        return (a.done === b.done) ? 0 : a.done ? 1: -1;\n      });\n    case \"UPDATE_TODO\":\n      const updatedTodo = action.payload as Itodo;\n      const newTodosWithUpdatedTodo = state.map((todo : Itodo) => {\n        if (todo.id !== updatedTodo.id) {\n          return todo;\n        } else {\n          return action.payload;\n        };\n      }) as Itodo[];\n      return newTodosWithUpdatedTodo.sort((a, b) => {\n        return (a.done === b.done) ? 0 : a.done ? 1 : -1;\n      });\n\n    case \"REMOVE_TODO\":\n      const removeTodoStateTodos = [...state] as Itodo[]; \n      const removeTodoPayload = action.payload as IremoveTodo;\n      return removeTodoStateTodos.filter(todo => {\n        return todo.id !== removeTodoPayload.todoId;\n      });\n\n    case \"ADD_STEP\":\n      const newStep = action.payload as Istep;\n      return state.map((todo : Itodo) => {\n        if (newStep.todoId === todo.id) {\n          return {...todo, steps: [...todo.steps, newStep]};\n        } else {\n          return todo;\n        };\n      });\n    case \"UPDATE_STEP\":\n      const updatedStep = action.payload as Istep;\n      return state.map((todo : Itodo) => {\n        if (updatedStep.todoId === todo.id) {\n          const steps = todo.steps.map(step => {\n            if (step.id === updatedStep.id) {\n              return updatedStep;\n            } else {\n              return step;\n            }\n          });\n          return {...todo, steps};\n        } else {\n          return todo;\n        };\n      });\n\n    case \"REMOVE_STEP\":\n      const removeStepPayload = action.payload as IremoveStep;\n      const removeStepStateTodos = [...state] as Itodo[];\n      return removeStepStateTodos.map(todo => {\n        if (todo.id !== removeStepPayload.todoId) {\n          return todo;\n        } else {\n          const newSteps = todo.steps.filter(step => {\n            return step.id !== removeStepPayload.stepId\n          });\n          return {...todo, steps: newSteps};\n        };\n      });\n\n    default:\n      return state;\n  };\n};\n\nexport default todoReducer;","interface Action {\n  type: \"TODOS_FETCHED\";\n  payload: boolean;\n}\n\nconst todosFetchedReducer = (state = false, action : Action) => {\n  switch(action.type) {\n    case \"TODOS_FETCHED\": \n      return action.payload;\n    default: \n      return state;\n  }\n};\n\nexport default todosFetchedReducer;","interface Action {\n  type: \"SHOW_TODOS\";\n  payload: 'active' | 'all';\n}\n\nconst showTodosReducer = (state = 'active', action : Action) => {\n  switch (action.type) {\n    case \"SHOW_TODOS\":\n      return action.payload;\n    default: \n      return state;\n  };\n};\n\nexport default showTodosReducer;","import {Itodo} from '../interfaces';\n\ninterface Action {\n  type: string;\n  payload: Itodo;\n};\n\nconst todoToUpdateReducer = (state = null, action : Action) => {\n  switch(action.type) {\n    case \"TODO_TO_EDIT\":\n      return action.payload;\n    default: \n      return state;\n  }\n\n};\n\nexport default todoToUpdateReducer;","import { combineReducers } from \"redux\";\nimport loginReducer from './loginReducer';\nimport pageReducer from \"./pageReducer\";\nimport statusReducer from './statusReducer';\nimport todoReducer from './todoReducer';\nimport todosFetchedReducer from './todosFetchedReducer';\nimport showTodosReducer from './showTodosReducer';\nimport todoToUpdateReducer from \"./todoToUpdateReducer\";\n\nexport default combineReducers({\n  page: pageReducer,\n  login: loginReducer,\n  appStatus: statusReducer,\n  todos: todoReducer,\n  showTodos: showTodosReducer,\n  todosFetched: todosFetchedReducer,\n  todoToUpdate: todoToUpdateReducer\n});","interface Body {\n  todo?: string;\n  step?: string;\n  done?: boolean;\n  dueDate?: string;\n  email?: string;\n  pword?: string;\n};\n\nconst host = () => {\n  switch (window.location.host) {\n    case 'localhost:3001':\n      return 'http://localhost:3000';\n    case '192.168.43.5:3001':\n      return 'http://192.168.43.5:3000';\n    default:\n      return '';\n  };\n};\n\nconst api = (path : string, method : \"POST\" | \"GET\" | \"PUT\" | \"DELETE\", body?: Body) => {\n  return fetch(host() + path, {\n    method,\n    headers: {\n      'Content-Type' : 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(body)\n  })\n  .then(res => res.json())\n};\n\nexport default api;","import { Dispatch } from \"redux\";\n\nexport const changePage = (page: string) => async (dispatch : Dispatch) => {\n  dispatch({type: 'TODO_TO_EDIT', payload: null});\n  dispatch({type: 'CHANGE_PAGE', payload: page})\n  return;\n};","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\n\nimport { IaddUserBody, Ires, IupdatePwordBody, IupdateUserBody, IupdateUserRes } from \"../interfaces\";\n\nexport const createAccount = (body : IaddUserBody) => async (dispatch : Dispatch) => {\n  return await api('/user', 'POST', body)\n  .then((resp : Ires) => {\n    if (resp.status === 201) {\n      dispatch({type: \"LOGIN\", payload: true});\n      return;\n    } else {\n      dispatch({type: \"LOGIN\", payload: false});\n      dispatch({type: \"STATUS\", payload: resp.status});\n      dispatch({type: \"CHANGE_PAGE\", payload: 'home'});\n      return;\n    };\n  })\n  .catch(err => {});\n};\n\nexport const logout = () => (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n  api('/login', 'PUT')\n  .then(resp => {\n    if (resp.status === 200) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'SET_TODOS', payload: []});\n      dispatch({type: 'TODOS_FETCHED', payload: false});\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  });\n};\n\nexport const updateUser = (body : IupdateUserBody ) => async (dispatch : Dispatch ) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n\n  return await api('/user', 'PUT', body)\n  .then((resp : IupdateUserRes)  => {\n    if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    } else if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  })\n};\n\nexport const updatePassword = (body : IupdatePwordBody) => (dispatch : Dispatch) => {\n  return api('/user/password', 'PUT', body) \n  .then((resp : Ires) => {\n    if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: resp.status});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  });\n};\n","import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { logout } from '../actions/user';\nimport { changePage } from '../actions/page';\n\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\n\ninterface State {\n  login: boolean;\n  page: string;\n};\n\ninterface Props extends State {\n  changePage: (page : string) => void;\n  logout: () => void;\n};\n\nconst NavBar = ({page, login, changePage, logout} : Props) => {\n\n  const [showMenu, setShowMenu] = useState <boolean> (false);\n  const ref = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n  useEffect(() => {\n    const handleClickOutside = (e : any) => {\n      if (ref.current && ref.current.contains(e.target)) {\n        return;\n      } else {\n        setShowMenu(false);\n      };\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  return (\n    <AppBar\n      ref={ref}\n      position='fixed'\n    >\n      <Toolbar\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n        <Typography\n          variant='h6' sx={{flexGrow: 1}}\n        >\n          {login ? \n            'Welcome back!'\n            : \n            'Log in or create an account'\n          }\n        </Typography>\n        {page !== 'home' && \n          <IconButton \n            size='large'\n            color='inherit'\n            onClick={() => changePage('home')}\n          >\n            <HomeOutlinedIcon />\n          </IconButton>\n        }\n        {login &&\n          <IconButton \n            size='large'\n            color='inherit'\n            onClick={() => setShowMenu(!showMenu)}\n            >\n            <MenuIcon />\n          </IconButton>\n        }\n      </Toolbar>\n      {(login && showMenu) && \n        <List\n          sx={{\n            border: '1px solid black',\n            position: 'absolute',\n            backgroundColor: 'rgba(255, 255, 255, 1)',\n            right: '30px',\n            top: '80px',\n            color: 'black'\n          }}\n        >\n          <ListItemButton\n            onClick={logout}\n          >\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Logout\n            </ListItemText>\n          </ListItemButton>\n          <ListItemButton\n            onClick={() => changePage('editUser')}\n          >\n            <ListItemIcon>\n              <PersonOutlineIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Profile\n            </ListItemText>\n          </ListItemButton>\n        </List>\n      }\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = ({page, login} : State) => {\n  return {\n    page, login\n  };\n};\n\nconst mapDispatchToProps = {\n  changePage,\n  logout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","export default __webpack_public_path__ + \"static/media/icon.f34a995a.png\";","import { SxProps } from \"@mui/system\";\n\ninterface Styles {\n  root: SxProps;\n  main: SxProps;\n  icon: SxProps;\n  form: SxProps;\n  centered: SxProps;\n  todoIcon: SxProps;\n  popup: SxProps;\n  textFlash: SxProps;\n  spinner: SxProps;\n  padding: SxProps;\n};\n\nconst styles = {\n  root: {\n    minWidth: '350px'\n  },\n  main: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  icon: {\n    '@media (max-width: 900px)': {\n      height: '120px'\n    },\n    '@media (max-width: 767px)': {\n      height: '100px'\n    },\n    '@media (max-width: 500px)': {\n      height: '80px'\n    }\n  },\n  form: {\n    display: 'flex',\n    flexGrow: 1,\n    flexDirection: 'column',\n    width: '50%',\n    '@media (max-width: 767px)': {\n      width: '90%'\n    }\n  },\n  centered: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  todoIcon: {\n    fontSize: 35,\n    p: 1\n  },\n  popup: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '500px',\n    bgcolor: 'background.paper',\n    boxShadow: 20,\n    p: 4\n  },\n  textFlash: {\n    opacity: '1',\n    animation: 'flash 1s infinite',\n    '@keyframes flash': {\n      '0%': {opacity: 1},\n      '50%': {opacity: 0},\n      '100%': {opacity: 1}\n    }\n  },\n  spinner: {\n    height: '50px',\n    width: '50px',\n    backgroundColor: 'black',\n    animation: 'spin 1s linear infinite',\n    '@keyframes spin': {\n      '100%': {transform: 'rotate(89deg)'}\n    }\n  },\n  padding: {\n    paddingBottom: '24px',\n    '@media (max-width: 767px)': {\n      paddingBottom: '16px'\n    },\n    '@media (max-width: 500px)': {\n      paddingBottom: '8px'\n    }\n  }\n} as Styles;\n\nexport default styles;\n","import Container from '@mui/material/Container';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nimport React from 'react';\n\nimport { connect } from 'react-redux';\nimport { changePage } from '../actions/page';\nimport { logout } from '../actions/user';\n\nimport NavBar from './NavBar';\n\nimport Icon from '../assets/icon.png';\n\nimport styles from '../styles/styles';\n\ninterface State {\n  login: boolean;\n  page: string;\n};\n\ninterface Props extends State {\n  children: React.ReactNode;\n  logout: () => void;\n  changePage: (page: string) => void;\n};\n\nconst Layout = ({children, login, page, logout, changePage} : Props) => {\n\n  return (\n    <Container sx={styles.root}>\n      <NavBar />\n      <Toolbar />\n      <Box sx={styles.main}>\n        <Box sx={styles.icon}>\n          <img style={{objectFit: 'contain', height: '100%', width: '100%'}} src={Icon} alt=\"icon\" />\n        </Box>\n      </Box>\n      <Typography \n        variant='h1'\n        align='center'\n        sx={styles.padding}\n      >\n        Things To Do\n      </Typography>\n      <hr />\n      {children}\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({login, page} : State) => {\n  return {\n    login, page\n  };\n};\n\nconst mapDispatchToProps = {\n  logout,\n  changePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","import Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nimport React, { useEffect, useState } from 'react';\nimport { login } from '../actions/login';\nimport { changePage } from '../actions/page';\n\nimport { connect } from 'react-redux';\nimport { IloginBody } from '../interfaces';\nimport styles from '../styles/styles';\n\ninterface Props {\n  login: (body : IloginBody) => void;\n  changePage: (page : string) => void;\n};\n\nconst Login = ({login, changePage} : Props) => {\n\n  const [email, setEmail] = useState <string> ('');\n  const [emailError, setEmailError] = useState <boolean> (false);\n  const [pword, setPword] = useState <string> ('');\n  const [pwordError, setPwordError] = useState <boolean> (false);\n  const [anyError, setAnyError] = useState <boolean> (false);\n\n  useEffect(() => {\n    const re = /^[a-z0-9.]+@[a-z0-9]+.[a-z0-9]+.[a-z0-9]{1,3}$/;\n    setEmailError(!re.test(email));\n  }, [email]);\n\n  useEffect(() => {\n    if (pword) {\n      setPwordError(false);\n    } else {\n      setPwordError(true);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (emailError || pwordError) {\n      setAnyError(true);\n    } else {\n      setAnyError(false);\n    };\n  }, [emailError, pwordError]);\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (anyError) {\n      return;\n    };\n    login({email, pword});\n  };\n\n  return (\n    <Box sx={styles.main}>\n      <Typography\n        variant='h2'\n        align='center'\n      >\n        Login\n      </Typography>\n      <Box \n        component='form'\n        onSubmit={handleSubmit}\n        sx={styles.form}\n      >\n        <TextField \n          variant='standard' \n          label='Email'\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          error={emailError}\n          autoFocus={true}\n        />\n        <TextField\n          variant='standard'\n          type='password'\n          label='Password'\n          value={pword}\n          onChange={e => setPword(e.target.value)}\n          error={pwordError}\n        />\n        <Stack\n          pt={2}\n          spacing={2}\n        >\n          {!anyError ?\n            <Button\n              variant='contained'\n              type='submit'\n              color='success'\n            >\n              Login\n            </Button>\n          : null}\n          <Button\n            variant='text'\n            onClick={() => changePage('createAccount')}\n            >Create An Account</Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = {\n  login, changePage\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport {Ires, IloginBody} from '../interfaces';\n\nexport const login = (body : IloginBody) => async (dispatch : Dispatch) => {\n  await api('/login', 'POST', body)\n  .then((res : Ires) => {\n    if (res.status === 200) {\n      return dispatch({type: 'LOGIN', payload: true});\n    } else {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: res.status});\n      return;\n    };\n  })\n  .catch(err => {\n    return dispatch({type: 'LOGIN', payload: false});\n  });\n};","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createAccount } from '../actions/user';\nimport { changePage } from '../actions/page';\nimport { IaddUserBody } from '../interfaces';\nimport styles from '../styles/styles';\n\ninterface Props {\n  createAccount : (body : IaddUserBody) => void;\n  changePage: (page: 'home') => void;\n};\n\nconst CreateAccount = ({createAccount, changePage} : Props) => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pword, setPword] = useState('');\n  const [confPword, setConfPword] = useState('');\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [pwordError, setPwordError] = useState(false);\n  const [confPwordError, setConfPwordError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    if (name) {\n      setNameError(false);\n    } else {\n      setNameError(true);\n    };\n  }, [name]);\n\n  useEffect(() => {\n    const re = /^[a-z0-9.]+@[a-z0-9]+.[a-z0-9]+.[a-z0-9]{1,3}$/;\n    if (re.test(email)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    };\n  }, [email]);\n\n  useEffect(() => {\n    if (pword) {\n      setPwordError(false);\n    } else {\n      setPwordError(true);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (confPword && pword === confPword) {\n      setConfPwordError(false);\n    } else {\n      setConfPwordError(true);\n    };\n  }, [pword, confPword]);\n\n  useEffect(() => {\n    if (nameError || emailError || pwordError || confPwordError) {\n      setAnyError(true);\n    } else {\n      setAnyError(false);\n    };\n  }, [nameError, emailError, pwordError, confPwordError]);\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (anyError) {\n      return;\n    } else {\n      createAccount({name, email, pword});\n    };\n  };\n\n  return (\n    <Box sx={styles.main}>\n      <Typography\n        variant='h2'\n        align='center'\n      >\n        Create Account\n      </Typography>\n      <Box\n        component='form'\n        onSubmit={handleSubmit}\n        sx={styles.form}\n      >\n        <TextField\n          variant='standard'\n          label='Name'\n          value={name}\n          onChange={e => setName(e.target.value)}\n          error={nameError}\n          autoFocus={true}\n        />\n        <TextField\n          variant='standard'\n          label='Email'\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          error={emailError}\n        />\n        <TextField\n          variant='standard'\n          label='Password'\n          value={pword}\n          onChange={e => setPword(e.target.value)}\n          error={pwordError}\n          type='password'\n        />\n        <TextField\n          variant='standard'\n          label='Confirm Password'\n          value={confPword}\n          onChange={e => setConfPword(e.target.value)}\n          error={confPwordError}\n          type='password'\n        />\n        <Stack\n          pt={2}\n          spacing={2}\n        >\n          {!anyError ?\n            <Button\n              variant='contained'\n              type='submit'\n              color='success'\n            >\n              Sign Up!\n            </Button>\n          : null}\n          <Button\n            variant='contained'\n            color='warning'\n            onClick={() => changePage('home')}\n          >\n            Cancel\n          </Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = {\n  createAccount,\n  changePage\n};\n\nexport default connect(null, mapDispatchToProps)(CreateAccount);","import Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport styles from '../styles/styles';\n\ninterface State {\n  appStatus : string | number | null;\n};\n\nconst Status = ({appStatus} : State) => {\n\n  const [statusOpen, setStatusOpen] = useState <boolean> (false);\n\n  useEffect(() => {\n    if (appStatus) {\n      setStatusOpen(true);\n    } else {\n      setStatusOpen(false);\n    }\n  }, [appStatus]);\n\n  const handleClose = () => {\n    if (appStatus === 'loading') {\n      return;\n    } else {\n      setStatusOpen(false);\n    };\n  };\n\n  const showError = () => {\n    switch (appStatus) {\n      case 401:\n        return \"Not Authorised\";\n      case 406:\n        return \"Invalid inputs\";\n      case 404:\n        return \"Not found\";\n      case 409:\n        return \"Duplication\";\n      default:\n        return \"There was a problem with your request\";\n    };\n  };\n\n  const ShowStatus = () => {\n    switch (appStatus) {\n      case 'loading':\n        return <>\n          <Typography variant='h4'>Loading</Typography>\n          <Box marginTop={2}sx={styles.spinner} />\n        </>;\n      default:\n        return <Stack alignItems='center' spacing={2}>\n          <Typography variant='h4'>Warning!</Typography>\n          <Typography variant='h5'>{showError()}</Typography>\n          <Typography sx={styles.textFlash} color='blue' variant='h6'>Click to dismiss</Typography>\n        </Stack>\n    };\n  };\n\n  return (\n    <Modal open={statusOpen}>\n      <Box sx={{...styles.popup, border: '2px solid red'}}>\n        <Box \n          sx={styles.main}\n          onClick={() => handleClose()}  \n        >\n          <ShowStatus />\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({appStatus} : State) => {\n  return {\n    appStatus\n  };\n};\n\nexport default connect(mapStateToProps)(Status);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport { IaddTodoBody, Ires, Itodo, ItodoRes, ItodosRes } from \"../interfaces\";\n\nexport const getTodos = () => async (dispatch : any, getState : any) => {\n  const path = getState().showTodos === 'active' ? '/todo' : '/todo/all';\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(path, 'GET')\n  .then((resp : ItodosRes) => {\n    if (resp.status === 200) {\n      dispatch({type: \"TODOS_FETCHED\", payload: true});\n      dispatch({type: \"SET_TODOS\", payload: resp.todos});\n      dispatch({type: \"STATUS\", payload: null});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  })\n  .catch(err => {});\n};\n\nexport const addTodo = (body: IaddTodoBody) => async (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n  const newBody = {...body, done: false};\n  \n  await api('/todo', 'POST', newBody)\n  .then((resp : ItodoRes) => {\n    if (resp.status === 201) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'ADD_TODO', payload: resp.todo});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      return dispatch({type: 'STATUS', payload: [resp.status]});\n    };\n  })\n  .catch(err => {});\n};\n\nexport const updateTodo = (todo : Itodo) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  dispatch({type: \"TODO_TO_EDIT\", payload: null});\n\n  const body = {\n    todo: todo.todo,\n    done: todo.done ? true : false,\n    dueDate: todo.dueDate,\n  };\n\n  return await api(`/todo/${todo.id}`, 'PUT', body)\n  .then((resp : ItodoRes) => {\n    if (resp.status === 202) {\n      dispatch({type: \"CHANGE_PAGE\", payload: 'home'});\n      dispatch({type: 'STATUS', payload: null})\n      dispatch({type: \"UPDATE_TODO\", payload: resp.todo});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n    };\n  })\n  .catch(err => {});\n};\n\nexport const deleteTodo = (todoId : number) => async (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n  await api(`/todo/${todoId}`, \"DELETE\")\n  .then((resp : Ires) => {\n    if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'REMOVE_TODO', payload: {todoId}});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  })\n  .catch(err => {});\n};\n\nexport const editTodo = (todoToEdit : Itodo) => async (dispatch : Dispatch) => {\n  await dispatch({type: \"TODO_TO_EDIT\", payload: todoToEdit});\n  dispatch({type: \"CHANGE_PAGE\", payload: 'editTodo'});\n  return;\n};\n\nexport const resetTodo = (todoId : string) => async (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n\n  await api(`/todo/${todoId}/reset`, 'PUT')\n  .then(resp => {\n    if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'UPDATE_TODO', payload: resp.todo});\n      return;\n    } else {\n      return dispatch({type: 'STATUS', payload: resp.status});\n    };\n  });\n  return;\n\n};","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport DoneIcon from '@mui/icons-material/Done';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport ReplayIcon from '@mui/icons-material/Replay';\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addStep, updateStep, deleteStep } from '../actions/step';\nimport { IaddStepBody, IupdateStepBody, Istep } from '../interfaces';\n\nimport styles from '../styles/styles';\n\ninterface Props {\n  steps: Istep[];\n  todoId: number;\n  addStep: (body: IaddStepBody) => void;\n  updateStep: (details : IupdateStepBody) => void;\n  deleteStep: (stepId : number, todoId: number) => void;\n};\n\nconst ShowSteps = ({steps, todoId, addStep, updateStep, deleteStep} : Props) => {\n\n  const [step, setStep] = useState('');\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (!step) {\n      return;\n    } else {\n      addStep({todoId, step, done: false});\n      setStep('');\n      return;\n    }\n  };\n\n  const handleStepChange = (e : React.ChangeEvent<HTMLInputElement>) => {\n    const text = e.target.value.replace(/[^a-zA-Z0-9 .,]/, '');\n    setStep(text);\n  };\n\n  return (\n    <Grid container direction='column'>\n      {\n        steps.map(step => (\n          <Grid container key={step.id}>\n            <Grid item xs={0} md={1} />\n            <Grid item xs={12} md={10} sx={{borderTop: 1}}>\n              <Grid container>\n                <Grid item xs={1} sx={styles.centered}>\n                  {step.done ? \n                    <ReplayIcon \n                      onClick={() => updateStep({stepId: step.id, todoId: step.todoId, body: {step: step.step, done: !step.done}})}\n                    /> \n                    : \n                    <DoneIcon\n                      color='success' \n                      onClick={() => updateStep({stepId: step.id, todoId: step.todoId, body: {step: step.step, done: !step.done}})}\n                    />\n                  }\n                </Grid>\n                <Grid item xs={10} sx={{overflow: 'hidden'}}>\n                  <Typography \n                    variant='body1' \n                    marginLeft={6}\n                    sx={{\n                      marginLeft: '40px',\n                      '@media (max-width: 767px)': {\n                        marginLeft: '16px'\n                      }\n                    }}\n                  >\n                    {step.step}\n                  </Typography>\n                </Grid>\n                <Grid item xs={1} sx={styles.centered}>\n                  <DeleteForeverOutlinedIcon \n                    color='warning'\n                    onClick={() => deleteStep(step.id, step.todoId)}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        ))\n      }\n        <Grid container component='form'\n          onSubmit={handleSubmit}\n          sx={{alignItems: 'end'}}\n        >\n          <Grid item xs={0} md={2} />\n          <Grid item xs={9} md={6} >\n            <TextField \n              variant='standard' \n              label='Enter new step...' \n              value={step}\n              onChange={handleStepChange}\n              sx={{\n                marginRight: '10px',\n                width: '100%'\n              }}\n              autoFocus={true}\n            />\n          </Grid>\n          <Grid item xs={3} md={2} sx={styles.centered}>\n            <Button \n              variant='contained' \n              color='success'\n              type='submit'\n            >\n              Add Step\n            </Button>\n          </Grid>\n        </Grid>\n    </Grid>\n  );\n};\n\nconst mapDispatchToProps = {\n  addStep,\n  updateStep,\n  deleteStep\n};\n\nexport default connect(null, mapDispatchToProps)(ShowSteps);\n","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport { IaddStepBody, IupdateStepBody, IstepRes } from \"../interfaces\";\n\nexport const addStep = (body : IaddStepBody) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(`/todo/${body.todoId}/step`, 'POST', body)\n  .then((resp : IstepRes) => {\n    if (resp.status === 201) {\n      dispatch({type: \"STATUS\", payload: null});\n      dispatch({type: \"ADD_STEP\", payload: resp.step});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      return dispatch({type: \"STATUS\", payload: resp.status});\n    };\n  });\n};\n\nexport const updateStep = (details: IupdateStepBody) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(`/todo/${details.todoId}/step/${details.stepId}`, 'PUT', details.body)\n  .then((resp : IstepRes) => {\n    if (resp.status === 202) {\n      dispatch({type: \"STATUS\", payload: null});\n      dispatch({type: \"UPDATE_STEP\", payload: resp.step});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      return dispatch({type: \"STATUS\", payload: resp.status});\n    };\n  })\n  .catch(err => {});\n};\n\nexport const deleteStep = (stepId: number, todoId: number) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(`/todo/${todoId}/step/${stepId}`, 'DELETE')\n  .then(resp => {\n    if (resp.status === 202) {\n      dispatch({type: \"STATUS\", payload: null});\n      dispatch({type: \"REMOVE_STEP\", payload: {stepId, todoId}});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: \"STATUS\", payload: resp.status});\n      return;\n    };\n  });\n};","import Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nimport DoneIcon from '@mui/icons-material/Done';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MinimizeIcon from '@mui/icons-material/Minimize';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft';\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTodo, deleteTodo, editTodo, resetTodo } from '../actions/todo';\nimport { Itodo } from '../interfaces';\nimport ShowSteps from './ShowSteps';\n\nimport styles from '../styles/styles';\n\ninterface Props {\n  todo: Itodo;\n  updateTodo: (todo: Itodo) => void;\n  deleteTodo: (todoId: number) => void;\n  editTodo: (todoToEdit: Itodo) => void;\n  resetTodo: (todoId : string) => void;\n};\n\nconst ShowTodo = ({todo, updateTodo, deleteTodo, editTodo, resetTodo} : Props) => {\n  const [showSteps, setShowSteps] = useState(false)\n  const [warning, setWarning] = useState(false);\n\n  const ShowDueDate = () => {\n    const d = new Date();\n    const todaysDate = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();\n    const now = Math.floor(new Date(`${todaysDate} 00:00`).getTime() / (1000 * 3600 * 24));\n    const due = Math.floor(new Date(`${todo.dueDate} 00:00`).getTime() / (1000 * 3600 * 24));\n    const daysTilDue = due - now;\n\n    let text : string;\n    if (daysTilDue < 0) {\n      text = `${Math.abs(daysTilDue)} days overdue!`\n    } else if (daysTilDue === 0) {\n      text = 'Due today!';\n    } else {\n      text = `${daysTilDue} days until due.`\n    };\n    return <Typography variant='h5'>{text}</Typography>\n  };\n\n  const ShowStepsCount = () => {\n    const stepCount = todo.steps.length;\n    let text;\n\n    if (stepCount === 0) {\n      text = 'No Steps';\n    } else {\n      const done = todo.steps.filter(step => {\n        return step.done;\n      });\n      text = `${done.length}/${stepCount} steps completed`;\n    };\n    return <Typography variant=\"h5\">{text}</Typography>\n  };\n\n  const handleTodoDone = (todo : Itodo) => {\n    updateTodo({...todo, done: todo.done ? false : true})\n  };\n\n  return (\n    <>\n      <Modal\n        open={warning}\n        onClose={() => setWarning(false)}\n      >\n        <Box\n          sx={styles.popup}\n        >\n          <Typography \n            align='center' \n            color='error' \n            variant='h3'\n            sx={styles.textFlash}\n          >\n            Warning!\n          </Typography>\n          <Typography align='center' color='error' variant='h5'>\n            This will permanantly delete the Todo!\n          </Typography>\n          <Typography align='center' variant='h5'>\n            Consider clicking the green tick to mark it as done instead...\n          </Typography>\n          <Stack direction='row' spacing={2} padding={2} justifyContent='center'>\n            <Button\n              color='error'\n              variant='contained'\n              onClick={() => deleteTodo(todo.id)}\n            >\n              Delete it!\n            </Button>\n            <Button \n              color='success'\n              variant='contained'\n              onClick={() => setWarning(false)}  \n            >\n              Keep it!\n            </Button>\n          </Stack>\n        </Box>\n      </Modal>\n\n      <Grid container>\n\n        {/* left icons */}\n        <Grid item xs={1}> \n          <Stack direction='column' alignItems='center' spacing={2} padding={2}>\n            {todo.done ?\n              <ReplayIcon \n                fontSize='large' \n                onClick={() => handleTodoDone(todo)}\n              />\n              :\n              <DoneIcon \n                fontSize='large' \n                color='success' \n                onClick={() => handleTodoDone(todo)}\n              />\n            }\n            {showSteps ? \n              <MinimizeIcon \n                fontSize='large' \n                onClick={() => setShowSteps(!showSteps)}\n              />\n              : \n              <MenuIcon \n                fontSize='large' \n                onClick={() => setShowSteps(!showSteps)}\n              />\n            }\n          </Stack>\n        </Grid>\n\n        {/* center column */}\n        <Grid \n          item\n          xs={10}\n        >\n          <Grid \n            container\n            direction='column'\n          >\n            <Grid container padding={1}>\n              <Grid \n                item \n                xs={8} \n                sx={{\n                  display: 'flex', \n                  alignItems: 'center', \n                  paddingLeft: 1,\n                  overflow: 'hidden',\n                }}>\n                <Typography variant='h4'>\n                  {todo.todo}\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Grid container direction='column'>\n                  <Grid \n                    item\n                    sx={{\n                      display: 'flex', \n                      alignItems: 'center', \n                      justifyContent:'flex-end',\n                      paddingRight: 1, \n                      textAlign: 'right'\n                    }}>\n                    {ShowStepsCount()}\n                  </Grid>\n                  <Grid \n                    item\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center', \n                      justifyContent: 'flex-end',\n                      paddingRight: 1,\n                      textAlign: 'right'\n                    }}\n                  >\n                    {ShowDueDate()}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            {!showSteps ? null :\n              <ShowSteps steps={todo.steps} todoId={todo.id} />\n            }\n          </Grid>\n        </Grid>\n\n        {/* right icons */}\n        <Grid item xs={1}>\n          <Stack direction='column' alignItems='center' spacing={2} padding={2}>\n            <EditOutlinedIcon \n              fontSize='large' \n              onClick={() => editTodo(todo)}\n            />\n            <RotateLeftIcon \n              onClick={() => resetTodo(String(todo.id))}\n            />\n            <DeleteForeverOutlinedIcon \n              fontSize='large' \n              color='error' \n              onClick={() => setWarning(true)}\n            />\n          </Stack>\n        </Grid>\n      </Grid>\n      <hr />\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateTodo,\n  deleteTodo,\n  editTodo,\n  resetTodo\n};\n\nexport default connect(null, mapDispatchToProps)(ShowTodo);\n","import Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport ReplayIcon from '@mui/icons-material/Replay';\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getTodos } from '../actions/todo';\nimport { changePage } from '../actions/page';\nimport ShowTodo from './ShowTodo';\nimport { Itodo } from '../interfaces';\n\ninterface State {\n  todos: Itodo[],\n  todosFetched: boolean;\n};\n\ninterface Props extends State {\n  getTodos: () => void;\n  changePage: (page : string) => void;\n};\n\nconst ShowTodos = ({todos, todosFetched, getTodos, changePage} : Props) => {\n\n  const [allOrActive, setAllOrActive] = useState <'all' | 'active'>('active');\n\n  useEffect(() => {\n    if (!todosFetched) {\n      getTodos();\n    };\n  }, [getTodos, todosFetched]);\n\n  const selectedTodos = () => {\n\n    const sortedTodos = todos.sort((a, b) => {\n      return a.dueDate === b.dueDate ? 0 : a.dueDate < b.dueDate ? -1 : 1;\n    });\n\n    if (allOrActive === 'active') {\n      return sortedTodos.filter(todo => {\n        return !todo.done ? todo : null;\n      });\n    } else {\n      return sortedTodos;\n    };\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column'\n      }}\n    >\n      <Typography\n        variant='h2'\n        align='center'\n      >\n        Your Todos\n      </Typography>\n      <Stack\n        direction='row'\n        spacing={2}\n      >\n        <Button\n          variant='contained'\n          onClick={() => changePage('addTodo')}\n          color=\"success\"\n          startIcon={<AddIcon />}\n        >\n          Add A Todo\n        </Button>\n        <Button\n          variant='contained'\n          onClick={() => setAllOrActive(allOrActive === 'active' ? 'all':'active')}\n          startIcon={<ReplayIcon />}\n        >\n          {allOrActive === 'all' ? 'Show Active Todos' : 'Show All Todos'}\n        </Button>\n      </Stack>\n      <Container\n        sx={{\n          padding: 2\n        }}\n      >\n        {selectedTodos().length !== 0 ? null :\n          <Stack direction='column' alignItems='center' p={2} spacing={3}\n          >\n            <Typography variant='h4'>\n              Whoops, it looks like there's nothing here\n            </Typography>\n            <Typography variant='h4'>\n              Click \"ADD A TODO\" to add a new todo\n            </Typography>\n            {allOrActive === 'all' ? null :\n              <>\n                <Typography align='center' variant='h6'>...or...</Typography>\n                <Typography align='center' variant='h4'>\n                  Click \"SHOW ALL TODOS\" to show the ones you have marked as done.\n                </Typography>\n              </>\n            }\n          </Stack>\n        }\n        {selectedTodos().map(todo => <ShowTodo todo={todo} key={todo.id} />)}\n      </Container>\n    </Box>\n  );\n};\n\nconst mapStateToProps = ({todos, todosFetched} : State) => {\n  return {\n    todos,\n    todosFetched,\n  };\n};\n\nconst mapDispatchToProps = {\n  getTodos,\n  changePage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTodos);","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions/todo';\nimport { changePage } from '../actions/page'\nimport { IaddTodoBody } from '../interfaces';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport styles from '../styles/styles';\n\ninterface Props {\n  addTodo: (body: IaddTodoBody) => Promise<void>;\n  changePage: (page: string) => void;\n};\n\nconst AddTodo = ({addTodo, changePage} : Props) => {\n\n  const convertDate = (unformattedDate : Date) => {\n    return unformattedDate.getFullYear() + '-' \n      + (unformattedDate.getMonth() + 1) + '-' \n      + unformattedDate.getDate();\n  };\n\n  const [todo, setTodo] = useState('');\n  const [dueDate, setDueDate] = useState <Date> (new Date());\n\n  const [todoError, setTodoError] = useState(false);\n  const [dueDateError, setDueDateError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    if (!todo) {\n      setTodoError(true);\n    } else {\n      setTodoError(false);\n    }\n  }, [todo]);\n\n  useEffect(() => {\n    if (dueDate && typeof(dueDate.getMonth) === 'function') {\n      setDueDateError(false);\n    } else {\n      setDueDateError(true);\n    }\n  }, [dueDate]);\n\n  useEffect(() => {\n    if (!todoError && !dueDateError) {\n      setAnyError(false);\n    } else {\n      setAnyError(true);\n    };\n  }, [todoError, dueDateError]);\n\n  const handleTodoChange = (e: React.ChangeEvent<HTMLInputElement>) =>{\n    const reTodo = e.target.value.replace(/[^a-zA-Z0-9 .,]/, '');\n    setTodo(reTodo);\n  };\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (anyError) {\n      return;\n    } else {\n      const date = convertDate(dueDate);\n      addTodo({todo, dueDate: date});\n    };\n  };\n  \n  return (\n    <Box sx={styles.main}>\n      <Typography\n        variant='h2'\n        align='center'\n      >\n        Add A Todo\n      </Typography>\n      <Box\n        component='form'\n        onSubmit={handleSubmit}\n        sx={styles.form}\n      >\n        <TextField\n          sx={{\n            marginBottom: 2\n          }}\n          variant='standard'\n          label='Enter Todo Text'\n          value={todo}\n          onChange={handleTodoChange}\n          error={todoError}\n          autoFocus={true}\n        />\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label='Due Date'\n            value={dueDate}\n            openTo='day'\n            inputFormat=\"dd/MM/yyyy\"\n            onChange={newValue => setDueDate(newValue as Date)}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n        <Stack\n          pt={2}\n          spacing={2}\n        >\n          {!anyError ?\n            <Button\n              variant='contained'\n              type='submit'\n              color='success'\n            >\n              Add Todo\n            </Button>\n          : null }\n          <Button\n            variant='contained'\n            color='warning'\n            onClick={() => changePage('home')}\n          >\n            Cancel\n          </Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  changePage\n};\n\nexport default connect(null, mapDispatchToProps)(AddTodo);","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\n\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { connect } from 'react-redux';\nimport { updateTodo } from '../actions/todo';\nimport { changePage } from '../actions/page'\nimport { Itodo } from '../interfaces';\nimport styles from '../styles/styles';\n\ninterface State {\n  todoToUpdate: Itodo;\n};\n\ninterface Props extends State {\n  updateTodo: (todo : Itodo) => void;\n  changePage: (page: string) => void;\n};\n\nconst UpdateTodo = ({todoToUpdate, updateTodo, changePage} : Props) => {\n\n  const convertDate = (unformattedDate : Date) => {\n    return unformattedDate.getFullYear() + '-' \n      + (unformattedDate.getMonth() + 1) + '-' \n      + unformattedDate.getDate();\n  };\n\n  const [todo, setTodo] = useState('');\n  const [dueDate, setDueDate] = useState <Date> (new Date());\n\n  const [todoError, setTodoError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    if (todoToUpdate === null) {\n      return;\n    } else {\n      setTodo(todoToUpdate.todo);\n      setDueDate(new Date(todoToUpdate.dueDate));\n    };\n  }, [todoToUpdate]);\n\n  useEffect(() => {\n    if (!todo) {\n      setTodoError(true);\n    } else {\n      setTodoError(false);\n    };\n  }, [todo]);\n\n  useEffect(() => {\n    if (!todoError) {\n      setAnyError(false);\n    } else {\n      setAnyError(true);\n    };\n  }, [todoError]);\n\n  const handleTodoChange = (e: React.ChangeEvent<HTMLInputElement>) =>{\n    const reTodo = e.target.value.replace(/[^a-zA-Z0-9 .,]/, '');\n    setTodo(reTodo);\n  };\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (anyError || !dueDate) {\n      return;\n    } else {\n      const date = convertDate(dueDate);\n      updateTodo({...todoToUpdate, todo, dueDate: date});\n    }\n  }\n\n  return (\n    <Box sx={styles.main}>\n      <Typography variant='h2'\n        align='center'\n      >\n        Update A Todo\n      </Typography>\n      <Box\n        component='form'\n        onSubmit={handleSubmit}\n        sx={styles.form}\n      >\n        <TextField\n          sx={{\n            marginBottom: 2\n          }}\n          variant='standard'\n          label='Enter Todo Text'\n          value={todo}\n          onChange={handleTodoChange}\n          error={todoError}\n          autoFocus={true}\n        />\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label='Due Date'\n            value={dueDate}\n            openTo='day'\n            inputFormat='dd/MM/yyyy'\n            onChange={newValue => setDueDate(newValue as Date)}\n            renderInput={params => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n        <Stack\n          pt={2}\n          spacing={2}\n        >\n          {anyError ? null :\n            <Button\n              variant='contained'\n              type='submit'\n              color='success'\n            >\n              Update Todo\n            </Button>\n          }\n          <Button\n            variant='contained'\n            color='warning'\n            onClick={() => changePage('home')}\n          >\n            Cancel\n          </Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = ({todoToUpdate} : State) => {\n  return {\n    todoToUpdate\n  };\n};\n\nconst mapDispatchToProps = {\n  changePage,\n  updateTodo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateTodo);","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setStatus } from '../actions/status';\nimport { updateUser } from '../actions/user';\nimport { changePage } from '../actions/page';\nimport api from '../api/api';\nimport { IupdateUserBody } from '../interfaces';\nimport styles from '../styles/styles';\n\ninterface Props {\n  updateUser: (user : IupdateUserBody) => void;\n  setStatus: (status : string | number | null) => void;\n  changePage: (page : string) => void;\n}\n\nconst EditUser = ({updateUser, setStatus, changePage} : Props) => {\n\n  const [loading, setLoading] = useState <boolean> (false);\n\n  const [returned, setReturned] = useState <{name: string, email: string}> ({name: '', email: ''});\n\n  const [name, setName] = useState <string> ('');\n  const [email, setEmail] = useState <string> ('');\n  const [pword, setPword] = useState <string> ('');\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [pwordError, setPwordError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      setLoading(true);\n      await api('/user', \"GET\")\n      .then(resp => {\n        if (resp.status === 200) {\n          setLoading(false);\n          setReturned(resp.user);\n          setName(resp.user.name);\n          setEmail(resp.user.email);\n          return;\n        } else {\n          setStatus(resp.status);\n        };\n      })\n      .catch(err => {});\n    };\n    getDetails();\n  }, [setStatus]);\n\n  useEffect(() => {\n    if (!name) {\n      setNameError(true);\n    } else {\n      setNameError(false);\n    };\n  }, [name]);\n\n  useEffect(() => {\n    const re = /^[a-z0-9.]+@[a-z0-9]+.[a-z0-9]+.[a-z0-9]{1,3}$/;\n    if (re.test(email)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    };\n  }, [email]);\n\n  useEffect(() => {\n    if (!pword) {\n      setPwordError(true);\n    } else {\n      setPwordError(false);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (!nameError && !emailError && !pwordError) {\n      setAnyError(false);\n    } else {\n      setAnyError(true);\n    };\n  }, [nameError, emailError, pwordError]);\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (anyError) {\n      return;\n    };\n    if (name === returned.name && email === returned.email) {\n      return;\n    };\n    updateUser({name, email, pword});\n  };\n\n  return (\n    <Box sx={styles.main}>\n      <Typography\n        variant='h2'\n        align='center'\n      >\n        Update Your Details\n      </Typography>\n      {loading ? \n          <div className='spinner' />\n      :\n      <Box\n        component='form'\n        onSubmit={handleSubmit}\n        sx={styles.form}\n      >\n        <TextField\n          variant='standard'\n          label='Name'\n          value={name}\n          onChange={e => setName(e.target.value)}\n          error={nameError}\n          autoFocus={true}\n        />\n        <TextField\n          variant='standard'\n          label='Email'\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          error={emailError}\n        />\n        <TextField\n          variant='standard'\n          label='Password'\n          type='password'\n          value={pword}\n          onChange={e => setPword(e.target.value)}\n          error={pwordError}\n        />\n        <Stack\n          pt={2}\n          spacing={2}\n        >\n          {!anyError ?\n            <Button\n              variant='contained'\n              color='success'\n              type='submit'\n            >\n              Update Details\n            </Button>\n          : null}\n          <Button\n            variant='contained'\n            onClick={() => changePage('updatePassword')}\n          >\n            Update Password\n          </Button>\n          <Button\n            variant='contained'\n            color='warning'\n            onClick={() => changePage('home')}\n          >\n            Cancel\n          </Button>\n        </Stack>\n      </Box>\n    }\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n  setStatus,\n  changePage\n}\n\nexport default connect(null, mapDispatchToProps)(EditUser);","import { Dispatch } from \"redux\";\n\nexport const setStatus = (status : string | number | null) => (dispatch : Dispatch) => {\n  return dispatch({type: \"STATUS\", payload: status});\n};\n\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\n\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { changePage } from '../actions/page';\nimport { IupdatePwordBody } from '../interfaces';\nimport { updatePassword } from '../actions/user';\nimport styles from '../styles/styles';\n\ninterface Props {\n  changePage: (page : string) => void;\n  updatePassword: (body: IupdatePwordBody) => void;\n}\n\nconst UpdatePassword = ({changePage, updatePassword} : Props) => {\n\n  const [pword, setPword] = useState <string> ('');\n  const [newPword, setNewPword] = useState <string> ('');\n  const [confirmNewPword, setConfirmNewPword] = useState <string> ('');\n\n  const [pwordError, setPwordError] = useState <boolean> (false);\n  const [newPwordError, setNewPwordError] = useState <boolean> (false);\n  const [confirmNewPwordError, setConfirmNewPwordError] = useState <boolean> (false);\n\n  const [anyError, setAnyError] = useState <boolean> (false);\n\n  useEffect(() => {\n    if (!pword) {\n      setPwordError(true);\n    } else {\n      setPwordError(false);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (!newPword) {\n      setNewPwordError(true);\n    } else {\n      setNewPwordError(false);\n    };\n  }, [newPword]);\n\n  useEffect(() => {\n    if (!confirmNewPword || confirmNewPword !== newPword) {\n      setConfirmNewPwordError(true);\n    } else {\n      setConfirmNewPwordError(false);\n    };\n  }, [confirmNewPword, newPword]);\n\n  useEffect(() => {\n    if (pwordError || newPwordError || confirmNewPwordError) {\n      setAnyError(true);\n    } else {\n      setAnyError(false);\n    };\n  }, [pwordError, newPwordError, confirmNewPwordError])\n\n  const handleSubmit = (e : React.SyntheticEvent) => {\n    e.preventDefault();\n    if (anyError || pword === newPword) {\n      return;\n    } else {\n      updatePassword({pword, newPword});\n    };\n  };\n\n  return (\n    <Box sx={styles.main}>\n      <Typography\n        variant='h2'\n        align='center'\n      >\n        Update Your Password\n      </Typography>\n      <Box\n        component='form'\n        onSubmit={handleSubmit}\n        sx={styles.form}\n      >\n        <TextField\n          variant='standard'\n          label='Old Password'\n          type='password'\n          value={pword}\n          onChange={e => setPword(e.target.value)}\n          error={pwordError}\n          autoFocus={true}\n        />\n        <TextField \n          variant='standard'\n          label='New Password'\n          type='password'\n          value={newPword}\n          onChange={e => setNewPword(e.target.value)}\n          error={newPwordError}\n        />\n        {newPwordError ? null :\n          <TextField \n            variant='standard'\n            label='Confirm New Password'\n            type='password'\n            value={confirmNewPword}\n            onChange={e => setConfirmNewPword(e.target.value)}\n            error={confirmNewPwordError}\n          />\n        }\n        <Stack\n          pt={2}\n          spacing={2}\n        >\n          {anyError ? null :\n            <Button\n              variant='contained'\n              color='success'\n              type='submit'\n            >\n              Update\n            </Button>\n          }\n          <Button\n            variant='contained'\n            color='warning'\n            onClick={() => changePage('home')}\n          >\n            Cancel\n          </Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = {\n  changePage,\n  updatePassword\n}\n\nexport default connect(null, mapDispatchToProps)(UpdatePassword);","const todoTheme = {\n  palette: {\n    success: {\n      main: '#9ee99e'\n    }\n  },\n  typography: {\n    h1: {\n      '@media (max-width: 900px)': {\n        fontSize: '4rem'\n      },\n      '@media (max-width: 767px)': {\n        fontSize: '3rem'\n      },\n      '@media (max-width: 500px)': {\n        fontSize: '2.5rem'\n      }\n    },\n    h2: {\n      '@media (max-width: 900px)': {\n        fontSize: '3rem'\n      },\n      '@media (max-width: 767px)': {\n        fontSize: '2.5rem'\n      },\n      '@media (max-width: 500px)': {\n        fontSize: '2rem'\n      }\n    },\n    h4: {\n      '@media (max-width: 900px)': {\n        fontSize: '1.8rem'\n      },\n      '@media (max-width: 767px)': {\n        fontSize: '1.4rem'\n      },\n      '@media (max-width: 500px)': {\n        fontSize: '1.2rem'\n      }\n    },\n    h5: {\n      '@media (max-width: 900px)': {\n        fontSize: '1.2rem'\n      },\n      '@media (max-width: 767px)': {\n        fontSize: '1rem'\n      },\n      '@media (max-width: 500px)': {\n        fontSize: '0.8rem'\n      }\n    },\n    body1: {\n      '@media (max-width: 900px)': {\n\n      },\n      '@media (max-width: 767px)': {\n        fontSize: '0.7rem',\n      },\n      '@media (max-width: 500px)': {\n\n      }\n    },\n    button: {\n      '@media (max-width: 767px)': {\n        fontSize: '0.6rem'\n      },\n      '@media (max-width: 500px)': {\n        fontSize: '0.38rem'\n      }\n    },\n  }\n};\n\nexport default todoTheme;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {ping} from '../actions/ping';\n\nimport Layout from './Layout';\n\nimport Login from './Login';\nimport CreateAccount from './CreateAccount';\nimport Status from './Status';\nimport ShowTodos from './ShowTodos';\nimport AddTodo from './AddTodo';\nimport EditTodo from './EditTodo';\nimport EditUser from './EditUser';\nimport UpdatePassword from './UpdatePassword';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport todoTheme from '../styles/theme';\n\ninterface State {\n  login: boolean;\n  page: string;\n};\n\ninterface Props extends State {\n  ping: () => void;\n};\n\nlet theme = createTheme(todoTheme);\n\nconst App = ({login, page, ping} : Props) => {\n\n  useEffect(() => {\n    ping();\n  }, [ping]);\n\n  const ShowPage = () => {\n    if (!login) {\n      switch (page) {\n        case 'createAccount':\n          return <CreateAccount />;\n        default: \n          return <Login />;\n      };\n    } else {\n      switch (page) {\n        case 'todos':\n          return <ShowTodos />;\n        case 'addTodo':\n          return <AddTodo />;\n        case 'editTodo':\n          return <EditTodo />;\n        case 'editUser':\n          return <EditUser />\n        case 'updatePassword':\n          return <UpdatePassword />\n        default: \n          return <ShowTodos />;\n      };\n    };\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <Status />\n        <ShowPage />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = ({login, page} : State) => {\n  \n  return {\n    login, \n    page\n  }\n}\n\nexport default connect(mapStateToProps, {ping})(App);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport {Ires} from '../interfaces';\n\nexport const ping = () => async (dispatch : Dispatch) => {\n  return await api('/ping', 'GET')\n  .then((resp : Ires) => {\n    if (resp.status === 200 && resp.message === 'ok') {\n      return dispatch({type: 'LOGIN', payload: true});\n    } else {\n      return dispatch({type: 'LOGIN', payload: false});\n    };\n  })\n  .catch(err => {});\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nimport App from './containers/App';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}