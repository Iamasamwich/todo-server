{"version":3,"sources":["reducers/loginReducer.ts","reducers/pageReducer.ts","reducers/statusReducer.ts","reducers/todoReducer.ts","reducers/todosFetchedReducer.ts","reducers/showTodosReducer.ts","reducers/todoToUpdateReducer.ts","reducers/index.ts","api/api.ts","actions/page.ts","containers/NavBar.tsx","actions/user.ts","containers/Logo.tsx","containers/Login.tsx","actions/login.ts","containers/CreateAccount.tsx","actions/status.ts","containers/status_pages/GenericError.tsx","containers/status_pages/Loading.tsx","containers/Status.tsx","actions/todo.ts","containers/ShowStep.tsx","actions/step.ts","containers/ShowSteps.tsx","containers/ShowTodo.tsx","containers/ShowTodos.tsx","containers/AddTodo.tsx","containers/EditTodo.tsx","containers/EditUser.tsx","containers/UpdatePassword.tsx","containers/App.tsx","actions/ping.ts","index.tsx"],"names":["loginReducer","state","action","type","payload","pageReducer","statusReducer","todoReducer","todos","doneLast","sort","a","b","done","todosWithNewTodo","updatedTodo","newTodosWithUpdatedTodo","map","todo","id","removeTodoStateTodos","removeTodoPayload","filter","todoId","newStep","steps","updatedStep","step","removeStepPayload","removeStepStateTodos","newSteps","stepId","todosFetchedReducer","showTodosReducer","todoToUpdateReducer","combineReducers","page","login","appStatus","showTodos","todosFetched","todoToUpdate","api","path","method","body","fetch","window","location","host","headers","credentials","JSON","stringify","then","res","json","changePage","dispatch","mapDispatchToProps","logout","resp","status","console","log","document","cookie","connect","useState","menuOpen","setMenuOpen","ref","useRef","useEffect","handleClickOutside","e","current","contains","target","addEventListener","removeEventListener","ShowMenu","className","onClick","item","handleMenuClick","Logo","catch","err","email","setEmail","pword","setPword","emailError","setEmailError","pwordError","setPwordError","anyError","setAnyError","test","length","ShowButtons","handleEnter","value","onChange","toLowerCase","onKeyDown","code","createAccount","name","setName","confPword","setConfPword","nameError","setNameError","confPwordError","setConfPwordError","setStatus","statusCode","showError","Loading","ShowStatus","updateTodo","dueDate","updateStep","details","deleteStep","handleStepDoneClick","addStep","setStep","handleAddStepClick","deleteTodo","editTodo","todoToEdit","showSteps","setShowSteps","warning","setWarning","ShowDueDate","text","d","Date","todaysDate","getFullYear","getMonth","getDate","now","Math","floor","getTime","daysTilDue","abs","ShowStepsCount","stepCount","getTodos","getState","allOrActive","setAllOrActive","sortedTodos","selectedTodos","addTodo","newBody","convertDate","unformattedDate","setTodo","setDueDate","todoError","setTodoError","dueDateError","setDueDateError","reTodo","replace","dateFormat","date","isNaN","selected","updateUser","loading","setLoading","returned","setReturned","getDetails","user","handleSubmit","updatePassword","newPword","setNewPword","confirmNewPword","setConfirmNewPword","newPwordError","setNewPwordError","confirmNewPwordError","setConfirmNewPwordError","ping","message","ShowPage","EditTodo","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.3ae9a695.chunk.js","sourcesContent":["interface Action {\n  payload: boolean;\n  type: \"LOGIN\";\n}\n\nconst loginReducer = (state = false, action : Action) => {\n  switch (action.type) {\n    case \"LOGIN\": \n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default loginReducer;","interface Action {\n  type: string;\n  payload: \"CHANGE_PAGE\";\n}\n\nconst pageReducer = (state = 'home', action : Action) => {\n  switch (action.type) {\n    case \"CHANGE_PAGE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default pageReducer;","interface Action {\n  payload: string | number | null;\n  type: string;\n};\n\nconst statusReducer = (state = null, action : Action) => {\n  switch (action.type) {\n    case \"STATUS\":\n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default statusReducer;","import {Itodo, Istep, IremoveTodo, IremoveStep} from '../interfaces';\n\ninterface Action {\n  type: \"SET_TODOS\" | \"ADD_TODO\" | \"UPDATE_TODO\" | \"REMOVE_TODO\" | \"ADD_STEP\" | \"UPDATE_STEP\" | \"REMOVE_STEP\";\n  payload: Itodo[] | Itodo | Istep | IremoveTodo | IremoveStep;\n};\n\nconst todoReducer = (state = [], action : Action) => {\n  switch (action.type){\n    case \"SET_TODOS\":\n      const todos = action.payload as Itodo[];\n      const doneLast : Itodo[] = todos.sort((a, b) => {\n        return (a.done === b.done) ? 0 : a.done ? 1 : -1\n      });\n      return doneLast;\n    case \"ADD_TODO\":\n      const todosWithNewTodo : Itodo[] = [...state, action.payload as Itodo];\n      return todosWithNewTodo.sort((a, b) => {\n        return (a.done === b.done) ? 0 : a.done ? 1: -1;\n      });\n    case \"UPDATE_TODO\":\n      const updatedTodo = action.payload as Itodo;\n      const newTodosWithUpdatedTodo = state.map((todo : Itodo) => {\n        if (todo.id !== updatedTodo.id) {\n          return todo;\n        } else {\n          return action.payload;\n        };\n      }) as Itodo[];\n      return newTodosWithUpdatedTodo.sort((a, b) => {\n        return (a.done === b.done) ? 0 : a.done ? 1 : -1;\n      });\n\n    case \"REMOVE_TODO\":\n      const removeTodoStateTodos = [...state] as Itodo[]; \n      const removeTodoPayload = action.payload as IremoveTodo;\n      return removeTodoStateTodos.filter(todo => {\n        return todo.id !== removeTodoPayload.todoId;\n      });\n\n    case \"ADD_STEP\":\n      const newStep = action.payload as Istep;\n      return state.map((todo : Itodo) => {\n        if (newStep.todoId === todo.id) {\n          return {...todo, steps: [...todo.steps, newStep]};\n        } else {\n          return todo;\n        };\n      });\n    case \"UPDATE_STEP\":\n      const updatedStep = action.payload as Istep;\n      return state.map((todo : Itodo) => {\n        if (updatedStep.todoId === todo.id) {\n          const steps = todo.steps.map(step => {\n            if (step.id === updatedStep.id) {\n              return updatedStep;\n            } else {\n              return step;\n            }\n          });\n          return {...todo, steps};\n        } else {\n          return todo;\n        };\n      });\n\n    case \"REMOVE_STEP\":\n      const removeStepPayload = action.payload as IremoveStep;\n      const removeStepStateTodos = [...state] as Itodo[];\n      return removeStepStateTodos.map(todo => {\n        if (todo.id !== removeStepPayload.todoId) {\n          return todo;\n        } else {\n          const newSteps = todo.steps.filter(step => {\n            return step.id !== removeStepPayload.stepId\n          });\n          return {...todo, steps: newSteps};\n        };\n      });\n\n    default:\n      return state;\n  };\n};\n\nexport default todoReducer;","interface Action {\n  type: \"TODOS_FETCHED\";\n  payload: boolean;\n}\n\nconst todosFetchedReducer = (state = false, action : Action) => {\n  switch(action.type) {\n    case \"TODOS_FETCHED\": \n      return action.payload;\n    default: \n      return state;\n  }\n};\n\nexport default todosFetchedReducer;","interface Action {\n  type: \"SHOW_TODOS\";\n  payload: 'active' | 'all';\n}\n\nconst showTodosReducer = (state = 'active', action : Action) => {\n  switch (action.type) {\n    case \"SHOW_TODOS\":\n      return action.payload;\n    default: \n      return state;\n  };\n};\n\nexport default showTodosReducer;","import {Itodo} from '../interfaces';\n\ninterface Action {\n  type: string;\n  payload: Itodo;\n};\n\nconst todoToUpdateReducer = (state = null, action : Action) => {\n  switch(action.type) {\n    case \"TODO_TO_EDIT\":\n      return action.payload;\n    default: \n      return state;\n  }\n\n};\n\nexport default todoToUpdateReducer;","import { combineReducers } from \"redux\";\nimport loginReducer from './loginReducer';\nimport pageReducer from \"./pageReducer\";\nimport statusReducer from './statusReducer';\nimport todoReducer from './todoReducer';\nimport todosFetchedReducer from './todosFetchedReducer';\nimport showTodosReducer from './showTodosReducer';\nimport todoToUpdateReducer from \"./todoToUpdateReducer\";\n\nexport default combineReducers({\n  page: pageReducer,\n  login: loginReducer,\n  appStatus: statusReducer,\n  todos: todoReducer,\n  showTodos: showTodosReducer,\n  todosFetched: todosFetchedReducer,\n  todoToUpdate: todoToUpdateReducer\n});","interface Body {\n  todo?: string;\n  step?: string;\n  done?: boolean;\n  dueDate?: string;\n  email?: string;\n  pword?: string;\n};\n\nconst host = () => {\n  switch (window.location.host) {\n    case 'localhost:3001':\n      return 'http://localhost:3000';\n    case '192.168.43.5:3001':\n      return 'http://192.168.43.5:3000';\n    default:\n      return '';\n  };\n};\n\nconst api = (path : string, method : \"POST\" | \"GET\" | \"PUT\" | \"DELETE\", body?: Body) => {\n  return fetch(host() + path, {\n    method,\n    headers: {\n      'Content-Type' : 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(body)\n  })\n  .then(res => res.json())\n};\n\nexport default api;","import { Dispatch } from \"redux\";\n\nexport const changePage = (page: string) => async (dispatch : Dispatch) => {\n  dispatch({type: 'TODO_TO_EDIT', payload: null});\n  dispatch({type: 'CHANGE_PAGE', payload: page})\n  return;\n};","import React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { changePage } from '../actions/page';\nimport { logout } from '../actions/user';\n\ninterface State {\n  login: boolean;\n  page: string;\n};\n\ninterface Props extends State {\n  logout: () => void;\n  changePage: (page: string) => void;\n}\n\nconst NavBar = ({login, page, logout, changePage} : Props) => {\n\n  const [menuOpen, setMenuOpen] = useState(false)\n  const ref = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n  useEffect(() => {\n    const handleClickOutside = (e : any) => {\n      if (ref.current && ref.current.contains(e.target)) {\n        return;\n      } else {\n        setMenuOpen(false);\n      };\n    };\n\n    document.body.addEventListener('click', handleClickOutside);\n\n    return () => document.body.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  const handleMenuClick = (item : string) => {\n    setMenuOpen(false)\n    switch (item) {\n      case 'logout':\n        return logout();\n      default:\n        return;\n    };\n  };\n\n  const ShowMenu = () => {\n    return (\n      <div \n        className={`nav-menu ${menuOpen ? 'menu-open' : ''}`}\n      >\n        {login ? \n        <>\n          <div \n            className='menu-item'\n            onClick={() => handleMenuClick('logout')}\n          >\n            Log Out\n          </div>\n          <div\n            className='menu-item'\n            onClick={() => changePage('editUser')}\n          >\n            Profile\n          </div>\n        </>\n        : null}\n      </div>\n    );\n  };\n  \n  return (\n    <div \n      ref={ref}\n      className='navbar'\n    >\n      {login ? \n        <div \n          className='nav-icon'\n          onClick={() => setMenuOpen(!menuOpen)}\n        >{'\\u2630'}</div>\n      : null}\n      {page !== 'home' ?\n        <div \n          className='nav-icon'\n          onClick={() => changePage('home')}\n        >\n          {'\\u2302'}\n        </div>  \n      : null}\n      <ShowMenu />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({login, page} : State) => {\n  return {\n    login,\n    page\n  };\n};\n\nconst mapDispatchToProps = {\n  logout,\n  changePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\n\nimport { IaddUserBody, Ires, IupdatePwordBody, IupdateUserBody, IupdateUserRes } from \"../interfaces\";\n\nexport const createAccount = (body : IaddUserBody) => async (dispatch : Dispatch) => {\n  return await api('/user', 'POST', body)\n  .then((resp : Ires) => {\n    if (resp.status === 201) {\n      dispatch({type: \"LOGIN\", payload: true});\n      return;\n    } else {\n      dispatch({type: \"LOGIN\", payload: false});\n      dispatch({type: \"STATUS\", payload: resp.status});\n      dispatch({type: \"CHANGE_PAGE\", payload: 'home'});\n      return;\n    };\n  })\n  .catch(err => {});\n};\n\nexport const logout = () => (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n\n  api('/login', 'PUT')\n  .then(resp => {\n    if (resp.status === 200) {\n\n      \n      console.log(document.cookie);\n\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'SET_TODOS', payload: []});\n      dispatch({type: 'TODOS_FETCHED', payload: false});\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  });\n};\n\nexport const updateUser = (body : IupdateUserBody ) => async (dispatch : Dispatch ) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n\n  return await api('/user', 'PUT', body)\n  .then((resp : IupdateUserRes)  => {\n    if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    } else if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  })\n};\n\nexport const updatePassword = (body : IupdatePwordBody) => (dispatch : Dispatch) => {\n  return api('/user/password', 'PUT', body) \n  .then((resp : Ires) => {\n    if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: resp.status});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  });\n};\n","import React from 'react';\nimport NavBar from './NavBar';\n\n\nconst Logo = () => {\n  return (\n    <div className=\"Logo\">\n      <NavBar />\n      <h1 className=\"logo-text\">THINGS TO DO</h1>\n    </div>\n  )\n};\n\nexport default Logo;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {login} from '../actions/login';\nimport {changePage} from '../actions/page';\nimport { IloginBody } from '../interfaces';\nimport Logo from './Logo';\n\n\ninterface Props {\n  login: (body: IloginBody) => void;\n  changePage: (page : string) => void;\n};\n\nconst Login = ({login, changePage} : Props) => {\n\n  const [email, setEmail] = useState('');\n  const [pword, setPword] = useState('');\n\n  const [emailError, setEmailError] = useState(false);\n  const [pwordError, setPwordError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    const re = /^[a-z0-9.]+@[a-z0-9]+.[a-z0-9]+.[a-z0-9]{1,3}$/;\n    if (!re.test(email)) {\n      setEmailError(true);\n    } else {\n      setEmailError(false);\n    };\n  }, [email]);\n\n  useEffect(() => {\n    if (pword.length > 0) {\n      setPwordError(false);\n    } else {\n      setPwordError(true);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (emailError || pwordError) {\n      setAnyError(true);\n    } else {\n      setAnyError(false);\n    };\n  }, [emailError, pwordError]);\n\n  const ShowButtons = () => {\n    return (\n      <div className='form-buttons'>\n        <button \n          className='green'\n          onClick={() => login({email, pword})}\n        >\n          Login\n        </button>\n      </div>\n    );\n  };\n\n  const handleEnter = () => {\n    if (anyError) {\n      return;\n    } else {\n      login({email, pword});\n    };\n  };\n\n  return (\n    <>\n      <Logo />\n      <div className='minusLogo'>\n        <h1>LOGIN</h1>\n        <div className='form-box'>\n          <label>Email:</label>\n          <input \n            className={emailError ? 'error' : ''}\n            value={email}\n            onChange={e => setEmail(e.target.value.toLowerCase())}\n            onKeyDown={e => e.code === 'Enter' ? handleEnter() : null}\n          />\n          <label>Password:</label>\n          <input\n            className={pwordError ? 'error' : ''}\n            type='password'\n            value={pword}\n            onChange={e => setPword(e.target.value)}\n            onKeyDown={e => e.code === 'Enter' ? handleEnter() : null}\n          />\n          {!anyError ? <ShowButtons /> : null}\n          <p \n            className='fake-link'\n            onClick={() => changePage('createAccount')}\n          >\n            Create Account\n          </p>\n        </div>\n      </div>\n    </>\n  )\n};\n\nconst mapDispatchToProps = {\n  login,\n  changePage\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport {Ires, IloginBody} from '../interfaces';\n\nexport const login = (body : IloginBody) => async (dispatch : Dispatch) => {\n  await api('/login', 'POST', body)\n  .then((res : Ires) => {\n    if (res.status === 200) {\n      return dispatch({type: 'LOGIN', payload: true});\n    } else {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: res.status});\n      return;\n    };\n  })\n  .catch(err => {\n    return dispatch({type: 'LOGIN', payload: false});\n  });\n};","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createAccount } from '../actions/user';\nimport { changePage } from '../actions/page';\nimport { IaddUserBody } from '../interfaces';\nimport Logo from './Logo';\n\ninterface Props {\n  createAccount : (body : IaddUserBody) => void;\n  changePage: (page: 'home') => void;\n};\n\nconst CreateAccount = ({createAccount, changePage} : Props) => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pword, setPword] = useState('');\n  const [confPword, setConfPword] = useState('');\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [pwordError, setPwordError] = useState(false);\n  const [confPwordError, setConfPwordError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    if (name) {\n      setNameError(false);\n    } else {\n      setNameError(true);\n    };\n  }, [name]);\n\n  useEffect(() => {\n    const re = /^[a-z0-9.]+@[a-z0-9]+.[a-z0-9]+.[a-z0-9]{1,3}$/;\n    if (re.test(email)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    };\n  }, [email]);\n\n  useEffect(() => {\n    if (pword) {\n      setPwordError(false);\n    } else {\n      setPwordError(true);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (confPword && pword === confPword) {\n      setConfPwordError(false);\n    } else {\n      setConfPwordError(true);\n    };\n  }, [pword, confPword]);\n\n  useEffect(() => {\n    if (nameError || emailError || pwordError || confPwordError) {\n      setAnyError(true);\n    } else {\n      setAnyError(false);\n    };\n  }, [nameError, emailError, pwordError, confPwordError]);\n\n  const ShowButtons = () => {\n    return (\n      <div className=\"form-buttons\">\n        {!anyError ? \n          <button\n            className='green'\n            onClick={() => createAccount({name, email, pword})}\n          >\n            Sign Up\n          </button>\n          : null\n        }\n        <button \n          className='red'\n          onClick={() => changePage('home')}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Logo />\n      <div className='minusLogo'>\n        <h1>CREATE ACCOUNT</h1>\n        <div className='form-box'>\n          <label>Name:</label>\n          <input\n            className={nameError ? 'error' : ''}\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <label>Email:</label>\n          <input\n            className={emailError ? 'error' : ''}\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <label>Password:</label>\n          <input\n            type='password'\n            className={pwordError ? 'error' : ''}\n            value={pword}\n            onChange={e => setPword(e.target.value)}\n          />\n          <label>Confirm Password:</label>\n          <input\n            type='password'\n            className={confPwordError ? 'error' : ''}\n            value={confPword}\n            onChange={e => setConfPword(e.target.value)}\n          />\n          <ShowButtons />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  createAccount,\n  changePage\n};\n\nexport default connect(null, mapDispatchToProps)(CreateAccount);","import { Dispatch } from \"redux\";\n\nexport const setStatus = (status : string | number | null) => (dispatch : Dispatch) => {\n  return dispatch({type: \"STATUS\", payload: status});\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {setStatus} from '../../actions/status';\n\ninterface Props {\n  statusCode: number | string | null;\n  setStatus: (status: string | number| null) => void;\n};\n\nconst GenericError = ({statusCode, setStatus} : Props) => {\n\n  const showError = () => {\n    switch (statusCode) {\n      case 401:\n        return \"Not Authorised\";\n      case 406:\n        return \"Invalid inputs\";\n      case 404:\n        return \"Not found\";\n      case 409:\n        return \"Duplication\";\n      default:\n        return \"There was a problem with your request\";\n    };\n  };\n  \n  return (\n    <div \n      className='Status'\n      onClick={() => setStatus(null)}\n    >\n      <div className='status-box'>\n        <h1>Error!</h1>\n        <h1>{showError()}</h1>\n        <p>*click anywhere to dismiss*</p>\n      </div>\n    </div>\n  )\n};\n\nconst mapDispatchToProps = {\n  setStatus\n};\n\nexport default connect(null, mapDispatchToProps)(GenericError);","import React from 'react';\n\nconst Loading = () => {\n\n  return (\n    <div className='Status'>\n\n      <div className='status-box'>\n        <h1>Loading</h1>\n        <div className='spinner' />\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;","import { connect } from \"react-redux\";\nimport GenericError from \"./status_pages/GenericError\";\nimport Loading from './status_pages/Loading';\n\ninterface State {\n  appStatus : string | number | null;\n};\n\nconst Status = ({appStatus} : State) => {\n\n  const ShowStatus = () => {\n    switch (appStatus) {\n      case 'loading':\n        return <Loading />\n      default:\n        return <GenericError statusCode={appStatus} />\n    };\n  };\n\n  if (appStatus === null) {\n    return null;\n  } else {\n    return (\n      <ShowStatus />\n    );\n  }\n};\n\nconst mapStateToProps = ({appStatus} : State) => {\n  return {\n    appStatus\n  };\n};\n\nexport default connect(mapStateToProps)(Status);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport { IaddTodoBody, Ires, Itodo, ItodoRes, ItodosRes } from \"../interfaces\";\n\nexport const getTodos = () => async (dispatch : any, getState : any) => {\n  const path = getState().showTodos === 'active' ? '/todo' : '/todo/all';\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(path, 'GET')\n  .then((resp : ItodosRes) => {\n    if (resp.status === 200) {\n      dispatch({type: \"TODOS_FETCHED\", payload: true});\n      dispatch({type: \"SET_TODOS\", payload: resp.todos});\n      dispatch({type: \"STATUS\", payload: null});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  })\n  .catch(err => {});\n};\n\nexport const addTodo = (body: IaddTodoBody) => async (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n  const newBody = {...body, done: false};\n  \n  await api('/todo', 'POST', newBody)\n  .then((resp : ItodoRes) => {\n    if (resp.status === 201) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'ADD_TODO', payload: resp.todo});\n      dispatch({type: 'CHANGE_PAGE', payload: 'home'});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      return dispatch({type: 'STATUS', payload: [resp.status]});\n    };\n  })\n  .catch(err => {});\n};\n\nexport const updateTodo = (todo : Itodo) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  dispatch({type: \"TODO_TO_EDIT\", payload: null});\n\n  const body = {\n    todo: todo.todo,\n    done: todo.done ? true : false,\n    dueDate: todo.dueDate,\n  };\n\n  return await api(`/todo/${todo.id}`, 'PUT', body)\n  .then((resp : ItodoRes) => {\n    if (resp.status === 202) {\n      dispatch({type: \"CHANGE_PAGE\", payload: 'home'});\n      dispatch({type: 'STATUS', payload: null})\n      dispatch({type: \"UPDATE_TODO\", payload: resp.todo});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n    };\n  })\n  .catch(err => {});\n};\n\nexport const deleteTodo = (todoId : number) => async (dispatch : Dispatch) => {\n  dispatch({type: 'STATUS', payload: 'loading'});\n  await api(`/todo/${todoId}`, \"DELETE\")\n  .then((resp : Ires) => {\n    if (resp.status === 202) {\n      dispatch({type: 'STATUS', payload: null});\n      dispatch({type: 'REMOVE_TODO', payload: {todoId}});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: 'STATUS', payload: resp.status});\n      return;\n    };\n  })\n  .catch(err => {});\n};\n\nexport const editTodo = (todoToEdit : Itodo) => async (dispatch : Dispatch) => {\n  await dispatch({type: \"TODO_TO_EDIT\", payload: todoToEdit});\n  dispatch({type: \"CHANGE_PAGE\", payload: 'editTodo'});\n  return;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport {updateStep, deleteStep} from '../actions/step';\nimport { Istep, IupdateStepBody } from '../interfaces';\n\ninterface Props {\n  step: Istep;\n  updateStep: (details : IupdateStepBody) => void;\n  deleteStep: (stepId : number, todoId: number) => void;\n};\n\nconst ShowStep = ({step, updateStep, deleteStep} : Props) => {\n\n  const handleStepDoneClick = () => {\n    const body = {\n      step: step.step,\n      done: step.done ? false : true,\n    };\n    updateStep({stepId: step.id, todoId: step.todoId, body});\n    return;\n  };\n\n  return (\n    <div className='step'>\n      <div \n        className={step.done ? 'greenText step-icons icons' : 'greyText step-icons icons'}\n        onClick={() => handleStepDoneClick()}\n      >\n        {step.done ? '\\u2611' : '\\u2611'}\n      </div>\n      <div className={step.done ? 'todo-step greyText' : 'todo-step'} >\n        {step.step}\n      </div>\n      <div\n        className=\"step-icons icons\"\n        onClick={() => deleteStep(step.id, step.todoId)}\n      >\n        {'\\u2421'}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateStep,\n  deleteStep\n}\n\nexport default connect(null, mapDispatchToProps)(ShowStep);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport { IaddStepBody, IupdateStepBody, IstepRes } from \"../interfaces\";\n\nexport const addStep = (body : IaddStepBody) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(`/todo/${body.todoId}/step`, 'POST', body)\n  .then((resp : IstepRes) => {\n    if (resp.status === 201) {\n      dispatch({type: \"STATUS\", payload: null});\n      dispatch({type: \"ADD_STEP\", payload: resp.step});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      return dispatch({type: \"STATUS\", payload: resp.status});\n    };\n  });\n};\n\nexport const updateStep = (details: IupdateStepBody) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(`/todo/${details.todoId}/step/${details.stepId}`, 'PUT', details.body)\n  .then((resp : IstepRes) => {\n    if (resp.status === 202) {\n      dispatch({type: \"STATUS\", payload: null});\n      dispatch({type: \"UPDATE_STEP\", payload: resp.step});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      return dispatch({type: \"STATUS\", payload: resp.status});\n    };\n  })\n  .catch(err => {});\n};\n\nexport const deleteStep = (stepId: number, todoId: number) => async (dispatch : Dispatch) => {\n  dispatch({type: \"STATUS\", payload: 'loading'});\n  return await api(`/todo/${todoId}/step/${stepId}`, 'DELETE')\n  .then(resp => {\n    if (resp.status === 202) {\n      dispatch({type: \"STATUS\", payload: null});\n      dispatch({type: \"REMOVE_STEP\", payload: {stepId, todoId}});\n      return;\n    } else if (resp.status === 401) {\n      dispatch({type: 'LOGIN', payload: false});\n      dispatch({type: 'STATUS', payload: 401});\n      return;\n    } else {\n      dispatch({type: \"STATUS\", payload: resp.status});\n      return;\n    };\n  });\n};","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addStep } from '../actions/step';\nimport { IaddStepBody, Istep } from '../interfaces';\nimport ShowStep from './ShowStep';\n\ninterface Props {\n  steps: Istep[];\n  todoId: number;\n  addStep: (body: IaddStepBody) => void;\n};\n\nconst ShowSteps = ({steps, todoId, addStep} : Props) => {\n\n  const [step, setStep] = useState('');\n\n  const handleAddStepClick = () => {\n    if (!step) {\n      return;\n    } else {\n      const body = {\n        step,\n        todoId,\n        done: false,\n      };\n      addStep(body);\n      setStep('');\n      return;\n    };\n  };\n\n  return (\n    <div className='todo-box-steps'>\n      {steps.map(step => {\n        return <ShowStep step={step} key={step.id} />\n      })}\n      <div className='step-input'>\n        <input\n          value={step}\n          onChange={e => setStep(e.target.value)}\n          onKeyDown={e => e.code === \"Enter\" ? handleAddStepClick() : null}\n        />\n        <button\n          onClick={handleAddStepClick}\n          className='green'\n        >Add Step</button>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  addStep\n};\n\nexport default connect(null, mapDispatchToProps)(ShowSteps);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTodo, deleteTodo, editTodo } from '../actions/todo';\nimport { Itodo } from '../interfaces';\nimport ShowSteps from './ShowSteps';\n\ninterface Props {\n  todo: Itodo;\n  updateTodo: (todo: Itodo) => void;\n  deleteTodo: (todoId: number) => void;\n  editTodo: (todoToEdit: Itodo) => void;\n};\n\nconst ShowTodo = ({todo, updateTodo, deleteTodo, editTodo} : Props) => {\n\n  const [showSteps, setShowSteps] = useState(false)\n  const [warning, setWarning] = useState(false);\n\n  const ShowDueDate = () => {\n\n    const d = new Date();\n    const todaysDate = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();\n    const now = Math.floor(new Date(todaysDate).getTime() / (1000 * 3600 * 24));\n    const due = Math.floor(new Date(todo.dueDate).getTime() / (1000 * 3600 * 24));\n    \n    const daysTilDue = due - now;\n    \n    let text : string;\n    if (daysTilDue < 0) {\n      text = `${Math.abs(daysTilDue)} days overdue!`\n    } else if (daysTilDue === 0) {\n      text = 'Due today!';\n    } else {\n      text = `${daysTilDue} days until due.`\n    };\n\n    return <h3>{text}</h3>\n  };\n\n  const ShowStepsCount = () => {\n    const stepCount = todo.steps.length;\n    let text;\n\n    if (stepCount === 0) {\n      text = 'No Steps';\n    } else {\n      const done = todo.steps.filter(step => {\n        return step.done;\n      });\n      text = `${done.length}/${stepCount} steps completed`;\n    };\n    return <h3>{text}</h3>\n  };\n\n  return (\n    <div className=\"todo-box\">\n      {warning ? \n        <div className='delete-todo-warning'>\n          <div className='warning-box'>\n\n            <p>You are about to delete a todo!</p>\n            <p>This action is not reversable!</p>\n            <p>To mark as done click the green tick to the left of the todo.</p>\n            <div className='form-buttons'>\n\n              <button\n                className='green'\n                onClick={() => deleteTodo(todo.id)}\n                >DELETE IT!</button>\n              <button\n                className='red'\n                onClick={() => setWarning(false)}\n                >Cancel</button>\n            </div>\n\n            </div>\n          </div>\n      : null}\n      <div className=\"todo-box-todo\">\n\n        <div className='todo-box-icons icons'>\n          <div \n            className='todo-box-icon'\n            onClick={() => updateTodo({...todo, done: todo.done ? false : true})}\n          >\n            {todo.done ? '\\u274c' : '\\u2705'}\n          </div>\n          <div \n            className='todo-box-icon'\n            onClick={() => setShowSteps(!showSteps)}\n          >\n            {showSteps ? '\\u2500' : '\\u2630'}\n          </div>\n        </div>\n        <div className=\"todo-box-text\">\n          <div className='todo-box-top'>\n            <h2>{todo.todo}</h2>\n          </div>\n          <div className='todo-box-bottom'>\n            <ShowDueDate />\n            <ShowStepsCount />\n          </div>\n        </div>\n        <div className=\"todo-box-icons icons\">\n          <div \n            className='todo-box-icon'\n            onClick={() => setWarning(true)}\n          >\n            {'\\u2421'}\n          </div>\n          <div\n            className='todo-box-icon'\n            onClick={() => editTodo(todo)}\n          >\n            {'\\u270F'}\n          </div>\n        </div>\n      </div>\n      {showSteps ? \n        <ShowSteps steps={todo.steps} todoId={todo.id} />\n        : null}\n    </div>\n  )\n};\n\nconst mapDispatchToProps = {\n  updateTodo,\n  deleteTodo,\n  editTodo,\n};\n\nexport default connect(null, mapDispatchToProps)(ShowTodo);","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Logo from './Logo';\nimport { getTodos } from '../actions/todo';\nimport { changePage } from '../actions/page';\nimport ShowTodo from './ShowTodo';\nimport { Itodo } from '../interfaces';\n\ninterface State {\n  todos: Itodo[],\n  todosFetched: boolean;\n};\n\ninterface Props extends State {\n  getTodos: () => void;\n  changePage: (page : string) => void;\n};\n\nconst ShowTodos = ({todos, todosFetched, getTodos, changePage} : Props) => {\n\n  const [allOrActive, setAllOrActive] = useState <'all' | 'active'>('active');\n\n  useEffect(() => {\n    if (!todosFetched) {\n      getTodos();\n    };\n  }, [getTodos, todosFetched]);\n\n  const selectedTodos = () => {\n\n    const sortedTodos = todos.sort((a, b) => {\n      return a.dueDate === b.dueDate ? 0 : a.dueDate < b.dueDate ? -1 : 1;\n    });\n\n    if (allOrActive === 'active') {\n      return sortedTodos.filter(todo => {\n        return !todo.done ? todo : null;\n      });\n    } else {\n      return sortedTodos;\n    };\n  };\n\n  return (\n    <>\n      <Logo />\n      <div className='minusLogo'>\n        <div className=\"form-buttons\">\n          <button \n            className='green'\n            onClick={() => changePage('addTodo')}\n          >\n            Add A Todo\n          </button>\n          <button\n            onClick={() => setAllOrActive(allOrActive === 'active' ? 'all' : 'active')}\n          >\n            {allOrActive === 'active' ? \n              'Show All Todos'\n              : \n              'Show Active Todos'\n            }\n          </button>\n        </div>\n\n        <div className='todos-box'>\n          {selectedTodos().map(todo => {\n            return <ShowTodo todo={todo} key={todo.id} />\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({todos, todosFetched} : State) => {\n  return {\n    todos,\n    todosFetched,\n  };\n};\n\nconst mapDispatchToProps = {\n  getTodos,\n  changePage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTodos);","import React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions/todo';\nimport { changePage } from '../actions/page'\nimport Logo from './Logo';\nimport { IaddTodoBody } from '../interfaces';\n\ninterface Props {\n  addTodo: (body: IaddTodoBody) => Promise<void>;\n  changePage: (page: string) => void;\n};\n\nconst AddTodo = ({addTodo, changePage} : Props) => {\n\n  const convertDate = (unformattedDate : Date) => {\n    return unformattedDate.getFullYear() + '-' \n      + (unformattedDate.getMonth() + 1) + '-' \n      + unformattedDate.getDate();\n  };\n\n  const [todo, setTodo] = useState('');\n  const [dueDate, setDueDate] = useState(convertDate(new Date()));\n\n  const [todoError, setTodoError] = useState(false);\n  const [dueDateError, setDueDateError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n  \n  useEffect(() => {\n    if (!todo) {\n      setTodoError(true);\n    } else {\n      setTodoError(false);\n    }\n  }, [todo]);\n\n  useEffect(() => {\n    const re = /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}$/;\n    if (!re.test(dueDate)) {\n      setDueDateError(true)\n    } else {\n      setDueDateError(false);\n    };\n  }, [dueDate]);\n\n  useEffect(() => {\n    if (!todoError && !dueDateError) {\n      setAnyError(false);\n    } else {\n      setAnyError(true);\n    };\n  }, [todoError, dueDateError]);\n\n  const handleTodoChange = (e: any) =>{\n    const reTodo = e.target.value.replace(/[^a-zA-Z0-9 .,]/, '');\n    setTodo(reTodo);\n  };\n  \n  const handleDueDateChange = (date : Date | null) => {\n    if (date !== null && !isNaN(date.getTime())) {\n      setDueDate(convertDate(date));\n    } else {\n      setDueDate(convertDate(new Date()));\n    };\n  };\n\n  const ShowButtons = () => {\n    return (\n      <div className=\"form-buttons\">\n        {!anyError ?\n          <button \n            className=\"green\"\n            onClick={() => addTodo({todo, dueDate})}\n          >\n            Add It!\n          </button>\n          : null  \n        }\n        <button \n          className=\"red\"\n          onClick={() => changePage('home')}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  };\n\n  const handleSubmitTodo = () => {\n    if (anyError) {\n      return;\n    } else {\n      addTodo({todo, dueDate});\n    };\n  }\n\n  return (\n    <>\n      <Logo />\n      <div className=\"minusLogo\">\n        <h1>Add A Todo</h1>\n        <div className=\"form-box\">\n          <label>Todo:</label>\n          <input\n            className={todoError ? 'error' : ''}\n            value={todo}\n            onChange={handleTodoChange}\n            onKeyDown={e => e.code === \"Enter\" ? handleSubmitTodo() : null}\n          />\n          <label>Due Date:</label>\n          <DatePicker\n            className='input'\n            dateFormat='dd/MM/yyyy'\n            onChange={handleDueDateChange}\n            selected={new Date(dueDate)}          \n          />\n          <ShowButtons />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  changePage\n};\n\nexport default connect(null, mapDispatchToProps)(AddTodo);","import React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { connect } from 'react-redux';\nimport { updateTodo } from '../actions/todo';\nimport { changePage } from '../actions/page'\nimport Logo from './Logo';\nimport { Itodo } from '../interfaces';\n\ninterface State {\n  todoToUpdate: Itodo;\n};\n\ninterface Props extends State {\n  updateTodo: (todo : Itodo) => void;\n  changePage: (page: string) => void;\n};\n\nconst UpdateTodo = ({todoToUpdate, updateTodo, changePage} : Props) => {\n\n  const convertDate = (unformattedDate : Date) => {\n    return unformattedDate.getFullYear() + '-' \n      + (unformattedDate.getMonth() + 1) + '-' \n      + unformattedDate.getDate();\n  };\n\n  const [todo, setTodo] = useState('');\n  const [dueDate, setDueDate] = useState(convertDate(new Date()));\n\n  const [todoError, setTodoError] = useState(false);\n  const [dueDateError, setDueDateError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    if (todoToUpdate === null) {\n      return;\n    } else {\n      setTodo(todoToUpdate.todo);\n      setDueDate(todoToUpdate.dueDate);\n    };\n  }, [todoToUpdate]);\n\n  useEffect(() => {\n    if (!todo) {\n      setTodoError(true);\n    } else {\n      setTodoError(false);\n    };\n  }, [todo]);\n\n  useEffect(() => {\n    const re = /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}$/;\n    if (!re.test(dueDate)) {\n      setDueDateError(true)\n    } else {\n      setDueDateError(false);\n    };\n  }, [dueDate]);\n\n  useEffect(() => {\n    if (!todoError && !dueDateError) {\n      setAnyError(false);\n    } else {\n      setAnyError(true);\n    };\n  }, [todoError, dueDateError]);\n\n  const handleTodoChange = (e: React.ChangeEvent<HTMLInputElement>) =>{\n    const reTodo = e.target.value.replace(/[^a-zA-Z0-9 .,]/, '');\n    setTodo(reTodo);\n  };\n  \n  const handleDueDateChange = (date : Date | null) => {\n    if (date !== null && !isNaN(date.getTime())) {\n      setDueDate(convertDate(date));\n    } else {\n      setDueDate(convertDate(new Date()));\n    };\n  };\n\n  const ShowButtons = () => {\n    return (\n      <div className=\"form-buttons\">\n        {!anyError ?\n          <button \n            className=\"green\"\n            onClick={() => updateTodo({...todoToUpdate, todo, dueDate})}\n          >\n            Update It!\n          </button>\n          : null  \n        }\n        <button \n          className=\"red\"\n          onClick={() => changePage('home')}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  };\n\n  const handleSubmitTodo = () => {\n    if (anyError) {\n      return;\n    } else {\n      updateTodo({...todoToUpdate, todo, dueDate});\n    };\n  };\n\n  return (\n    <>\n      <Logo />\n      <div className=\"minusLogo\">\n        <h1>Update A Todo</h1>\n        <div className=\"form-box\">\n          <label>Todo:</label>\n          <input\n            className={todoError ? 'error' : ''}\n            value={todo}\n            onChange={handleTodoChange}\n            onKeyDown={e => e.code === \"Enter\" ? handleSubmitTodo() : null}\n          />\n          <label>Due Date:</label>\n          <DatePicker\n            className='input'\n            dateFormat='dd/MM/yyyy'\n            onChange={handleDueDateChange}\n            selected={new Date(dueDate)}          \n          />\n          <ShowButtons />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = ({todoToUpdate} : State) => {\n  return {\n    todoToUpdate\n  };\n};\n\nconst mapDispatchToProps = {\n  changePage,\n  updateTodo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateTodo);","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setStatus } from '../actions/status';\nimport { updateUser } from '../actions/user';\nimport { changePage } from '../actions/page';\nimport api from '../api/api';\nimport Logo from './Logo';\nimport { IupdateUserBody } from '../interfaces';\n\ninterface Props {\n  updateUser: (user : IupdateUserBody) => void;\n  setStatus: (status : string | number | null) => void;\n  changePage: (page : string) => void;\n}\n\nconst EditUser = ({updateUser, setStatus, changePage} : Props) => {\n\n  const [loading, setLoading] = useState <boolean> (false);\n\n  const [returned, setReturned] = useState <{name: string, email: string}> ({name: '', email: ''});\n\n  const [name, setName] = useState <string> ('');\n  const [email, setEmail] = useState <string> ('');\n  const [pword, setPword] = useState <string> ('');\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [pwordError, setPwordError] = useState(false);\n\n  const [anyError, setAnyError] = useState(false);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      setLoading(true);\n      await api('/user', \"GET\")\n      .then(resp => {\n        if (resp.status === 200) {\n          setLoading(false);\n          setReturned(resp.user);\n          setName(resp.user.name);\n          setEmail(resp.user.email);\n          return;\n        } else {\n          setStatus(resp.status);\n        };\n      })\n      .catch(err => {});\n    };\n    getDetails();\n  }, [setStatus]);\n\n  useEffect(() => {\n    if (!name) {\n      setNameError(true);\n    } else {\n      setNameError(false);\n    };\n  }, [name]);\n\n  useEffect(() => {\n    const re = /^[a-z0-9.]+@[a-z0-9]+.[a-z0-9]+.[a-z0-9]{1,3}$/;\n    if (re.test(email)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    };\n  }, [email]);\n\n  useEffect(() => {\n    if (!pword) {\n      setPwordError(true);\n    } else {\n      setPwordError(false);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (!nameError && !emailError && !pwordError) {\n      setAnyError(false);\n    } else {\n      setAnyError(true);\n    };\n  }, [nameError, emailError, pwordError]);\n\n  const handleSubmit = () => {\n    if (anyError) {\n      return;\n    };\n    if (name === returned.name && email === returned.email) {\n      return;\n    };\n    updateUser({name, email, pword});\n  };\n\n  const ShowButtons = () => {\n    return (\n      <>\n        <div className=\"form-buttons\">\n          {!anyError ? \n            <button\n              className='green'\n              onClick={handleSubmit}\n            >\n              Update User\n            </button>\n            : null\n          }\n          <button \n            className='red'\n            onClick={() => changePage('home')}\n          >\n            Cancel\n          </button>\n        </div>\n\n        <div className='form-buttons'>\n          <button\n            className='blue'\n            onClick={() => changePage('updatePassword')}\n          >Update Password</button>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Logo />\n      <div className='minusLogo'>\n        <h1>Edit Your Details</h1>\n        {loading ?\n          <div className='spinner' />\n      :\n        <div className='form-box'>\n          <label>Name:</label>\n          <input\n            className={nameError ? 'error' : ''}\n            value={name}\n            onChange={e => setName(e.target.value)}\n            />\n          <label>Email:</label>\n          <input\n            className={emailError ? 'error' : ''}\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            />\n          <label>Password:</label>\n          <input\n            className={pwordError ? 'error' : ''}\n            value={pword}\n            onChange={e => setPword(e.target.value)}\n            type='password'\n            />\n          <ShowButtons />\n        </div>\n        }\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n  setStatus,\n  changePage\n}\n\nexport default connect(null, mapDispatchToProps)(EditUser);","import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { changePage } from '../actions/page';\nimport { IupdatePwordBody } from '../interfaces';\nimport { updatePassword } from '../actions/user';\nimport Logo from './Logo';\n\ninterface Props {\n  changePage: (page : string) => void;\n  updatePassword: (body: IupdatePwordBody) => void;\n}\n\nconst UpdatePassword = ({changePage, updatePassword} : Props) => {\n\n  const [pword, setPword] = useState <string> ('');\n  const [newPword, setNewPword] = useState <string> ('');\n  const [confirmNewPword, setConfirmNewPword] = useState <string> ('');\n\n  const [pwordError, setPwordError] = useState <boolean> (false);\n  const [newPwordError, setNewPwordError] = useState <boolean> (false);\n  const [confirmNewPwordError, setConfirmNewPwordError] = useState <boolean> (false);\n\n  const [anyError, setAnyError] = useState <boolean> (false);\n\n  useEffect(() => {\n    if (!pword) {\n      setPwordError(true);\n    } else {\n      setPwordError(false);\n    };\n  }, [pword]);\n\n  useEffect(() => {\n    if (!newPword) {\n      setNewPwordError(true);\n    } else {\n      setNewPwordError(false);\n    };\n  }, [newPword]);\n\n  useEffect(() => {\n    if (!confirmNewPword || confirmNewPword !== newPword) {\n      setConfirmNewPwordError(true);\n    } else {\n      setConfirmNewPwordError(false);\n    };\n  }, [confirmNewPword, newPword]);\n\n  useEffect(() => {\n    if (pwordError || newPwordError || confirmNewPwordError) {\n      setAnyError(true);\n    } else {\n      setAnyError(false);\n    };\n  }, [pwordError, newPwordError, confirmNewPwordError])\n\n  const handleSubmit = () => {\n    if (anyError || pword === newPword) {\n      return;\n    } else {\n      updatePassword({pword, newPword});\n    };\n  };\n\n  const handleEnter = (e : React.KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      handleSubmit();\n    };\n  };\n\n  const ShowButtons = () => {\n    return (\n      <div className='form-buttons'>\n        {\n          anyError ?\n          null\n        :  \n          <button\n            className='green'\n            onClick={() => handleSubmit()}\n          >\n            Update\n          </button>\n        }\n        <button\n          className='red'\n          onClick={() => changePage('home')}\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Logo />\n      <div className='minusLogo'>\n        <h1>Update Your Password</h1>\n\n        <div className='form-box'>\n          <label>Old Password:</label>\n          <input\n            type='password'\n            onKeyDown={e => handleEnter(e)}\n            className={pwordError ? 'error' : ''}\n            value={pword}\n            onChange={e => setPword(e.target.value)}\n          />\n\n          <label>New Password:</label>\n          <input\n            type='password'\n            onKeyDown={e => handleEnter(e)}\n            className={newPwordError ? 'error' : ''}\n            value={newPword}\n            onChange={e => setNewPword(e.target.value)}\n          />\n\n          {newPwordError ? \n          null\n          :  \n            <>\n              <label>Confirm New Password:</label>\n              <input\n                type='password'\n                onKeyDown={e => handleEnter(e)}\n                className={confirmNewPwordError ? 'error' : ''}  \n                value={confirmNewPword}\n                onChange={e => setConfirmNewPword(e.target.value)}\n              />\n            </>\n          }\n          <ShowButtons />\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  changePage,\n  updatePassword\n}\n\nexport default connect(null, mapDispatchToProps)(UpdatePassword);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {ping} from '../actions/ping';\n\nimport Login from './Login';\nimport CreateAccount from './CreateAccount';\nimport Status from './Status';\nimport ShowTodos from './ShowTodos';\nimport AddTodo from './AddTodo';\nimport EditTodo from './EditTodo';\nimport EditUser from './EditUser';\nimport UpdatePassword from './UpdatePassword';\n\ninterface State {\n  login: boolean;\n  page: string;\n};\n\ninterface Props extends State {\n  ping: () => void;\n};\n\nconst App = ({login, page, ping} : Props) => {\n\n  useEffect(() => {\n    ping();\n  }, [ping]);\n\n  const ShowPage = () => {\n    if (!login) {\n      switch (page) {\n        case 'createAccount':\n          return <CreateAccount />;\n        default: \n          return <Login />;\n      };\n    } else {\n      switch (page) {\n        case 'todos':\n          return <ShowTodos />;\n        case 'addTodo':\n          return <AddTodo />;\n        case 'editTodo':\n          return <EditTodo />;\n        case 'editUser':\n          return <EditUser />\n        case 'updatePassword':\n          return <UpdatePassword />\n        default: \n          return <ShowTodos />;\n      };\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <Status />\n      <ShowPage />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({login, page} : State) => {\n  \n  return {\n    login, \n    page\n  }\n}\n\nexport default connect(mapStateToProps, {ping})(App);","import { Dispatch } from \"redux\";\nimport api from \"../api/api\";\nimport {Ires} from '../interfaces';\n\nexport const ping = () => async (dispatch : Dispatch) => {\n  return await api('/ping', 'GET')\n  .then((resp : Ires) => {\n    if (resp.status === 200 && resp.message === 'ok') {\n      return dispatch({type: 'LOGIN', payload: true});\n    } else {\n      return dispatch({type: 'LOGIN', payload: false});\n    };\n  })\n  .catch(err => {});\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './styles/App.css';\n\nimport App from './containers/App';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}